.drp-accordion-container-bg {
	height: ${getValue(data, ["tokens.css", "accordion-container-bg", "height"])};
	padding: ${getValue(data, ["tokens.css", "accordion-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "accordion-container-bg", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "accordion-container-bg", "border-bottom-left-radius"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "accordion-container-bg", "border-bottom-width"])}px;
}

.drp-accordion-secondary-container-bg {
	height: ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "height"])};
	padding: ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "border-bottom-left-radius"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "accordion-secondary-container-bg", "border-bottom-width"])}px;
}

.drp-accordion-container-summary-bg {
	height: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "height"])}px;
	background: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "background"])};
	padding-top: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "padding-top"])}px;
	padding-right: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "padding-right"])}px;
	padding-bottom: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "padding-bottom"])}px;
	padding-left: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "padding-left"])}px;
	box-shadow: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
}

.drp-accordion-secondary-container-summary-bg {
	height: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "height"])}px;
	background: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "background"])};
	padding-top: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "padding-top"])}px;
	padding-right: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "padding-right"])}px;
	padding-bottom: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "padding-bottom"])}px;
	padding-left: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "padding-left"])}px;
	box-shadow: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
}

.drp-accordion-details {
	padding-top: ${getValue(data, ["tokens.css", "drp-accordion-details", "padding-top"])}px;
	padding-right: ${getValue(data, ["tokens.css", "drp-accordion-details", "padding-right"])}px;
	padding-bottom: ${getValue(data, ["tokens.css", "drp-accordion-details", "padding-bottom"])}px;
	padding-left: ${getValue(data, ["tokens.css", "drp-accordion-details", "padding-left"])}px;
}

.drp-assistive-text-container-bg {
	gap: ${getValue(data, ["tokens.css", "assistive-text-container-bg", "gap"])}px;
}

.drp-assistive-text-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " assistive-text-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "assistive-text-typography", "text-decoration"])};
}

.drp-avatar-container-bg-small {
	height: ${getValue(data, ["tokens.css", "avatar-container-bg-small", "height"])}px;
	width: ${getValue(data, ["tokens.css", "avatar-container-bg-small", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "avatar-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "avatar-container-bg-small", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-small", "border-bottom-left-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "avatar-container-bg-small", "border-width"])}px;
}

.drp-avatar-container-bg-medium {
	height: ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "height"])}px;
	width: ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "border-bottom-left-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "avatar-container-bg-medium", "border-width"])}px;
}

.drp-avatar-container-bg-large {
	height: ${getValue(data, ["tokens.css", "avatar-container-bg-large", "height"])}px;
	width: ${getValue(data, ["tokens.css", "avatar-container-bg-large", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "avatar-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "avatar-container-bg-large", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "avatar-container-bg-large", "border-bottom-left-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "avatar-container-bg-large", "border-width"])}px;
}

.drp-avatar-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " avatar-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-small", "text-decoration"])};
}

.drp-avatar-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " avatar-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-medium", "text-decoration"])};
}

.drp-avatar-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " avatar-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "avatar-typography-large", "text-decoration"])};
}

.drp-badge-container-bg-xs {
	border-radius: ${getValue(data, ["tokens.css", "badge-container-bg-xs", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "badge-container-bg-xs", "border-width"])}px;
	height: ${getValue(data, ["tokens.css", "badge-container-bg-xs", "height"])}px;
	width: ${getValue(data, ["tokens.css", "badge-container-bg-xs", "width"])}px;
}

.drp-badge-container-bg-small {
	height: ${getValue(data, ["tokens.css", "badge-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "badge-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "badge-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "badge-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "badge-container-bg-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "badge-container-bg-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "badge-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "badge-container-bg-small", "border-width"])}px;
}

.drp-badge-container-bg-medium {
	height: ${getValue(data, ["tokens.css", "badge-container-bg-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "badge-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "badge-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "badge-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "badge-container-bg-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "badge-container-bg-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "badge-container-bg-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "badge-container-bg-medium", "border-width"])}px;
}

.drp-badge-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " badge-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-medium", "text-decoration"])};
}

.drp-badge-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " badge-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "badge-typography-small", "text-decoration"])};
}

.drp-banner-container-inside {
	padding: ${getValue(data, ["tokens.css", "banner-container-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "banner-container-inside", "gap"])}px;
}

.drp-banner-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "banner-container-bg", "border-radius"])}px;
	box-shadow: ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "x"])} ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "y"])} ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "blur"])} ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "spread"])} ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "color"])};
	border-left-width: ${getValue(data, ["tokens.css", "banner-container-bg", "border-left-width"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "banner-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "banner-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "banner-container-bg", "border-bottom-width"])}px;
	padding: ${getValue(data, ["tokens.css", "banner-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "banner-container-bg", "gap"])}px;
}

.drp-banner-typography-title {
	font: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " banner-typography-title", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-title", "text-decoration"])};
}

.drp-banner-typography-description {
	font: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " banner-typography-description", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "banner-typography-description", "text-decoration"])};
}

.drp-breadcrumb-container {
	height: ${getValue(data, ["tokens.css", "breadcrumb-container", "height"])}px;
	gap: ${getValue(data, ["tokens.css", "breadcrumb-container", "gap"])}px;
}

.drp-breadcrumb-typography-small-default {
	font: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " breadcrumb-typography-small-default", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-default", "text-decoration"])};
}

.drp-breadcrumb-typography-small-selected {
	font: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " breadcrumb-typography-small-selected", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "breadcrumb-typography-small-selected", "text-decoration"])};
}

.drp-button-contained-container-bg-small {
	height: ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-container-bg-small", "border-width"])}px;
}

.drp-button-contained-container-bg-medium {
	height: ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-container-bg-medium", "border-width"])}px;
}

.drp-button-contained-container-bg-large {
	height: ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-container-bg-large", "border-width"])}px;
}

.drp-button-contained-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "letter-spacing"])};
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-decoration"])};
}

.drp-button-contained-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-decoration"])};
}

.drp-button-contained-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-decoration"])};
}

.drp-button-contained-icon-container-rect-bg-small {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-small", "border-width"])}px;
}

.drp-button-contained-icon-container-rect-bg-medium {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-medium", "border-width"])}px;
}

.drp-button-contained-icon-container-rect-bg-large {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-rect-bg-large", "border-width"])}px;
}

.drp-button-contained-icon-container-circle-bg-small {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-small", "border-width"])}px;
}

.drp-button-contained-icon-container-circle-bg-medium {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "border-width"])}px;
}

.drp-button-contained-icon-container-circle-bg-large {
	height: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "height"])}px;
	width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "width"])}px;
	padding: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-contained-icon-container-circle-bg-large", "border-width"])}px;
}

.drp-button-contained-focus {
	border-radius: ${getValue(data, ["tokens.css", "button-contained-focus", "border-radius"])}px;
}

.drp-button-link-container-bg {
	height: ${getValue(data, ["tokens.css", "button-link-container-bg", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "button-link-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "button-link-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "button-link-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "button-link-container-bg", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "button-link-container-bg", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "button-link-container-bg", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "button-link-container-bg", "border-width"])}px;
}

.drp-button-link-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "font-family"])}",
	sans-serif;
	text-transform:${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-small", "text-decoration"])};
}

.drp-button-link-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-medium", "text-decoration"])};
}

.drp-button-link-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-link-typography-large", "text-decoration"])};
}

.drp-button-link-focus {
	border-radius: ${getValue(data, ["tokens.css", "button-link-focus", "border-radius"])}px;
}

.drp-card-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "card-container-bg", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "card-container-bg", "border-width"])}px;
	padding-inline: ${getValue(data, ["tokens.css", "card-container-bg", "padding-inline"])}px;
	padding-block: ${getValue(data, ["tokens.css", "card-container-bg", "padding-block"])}px;
}

.drp-checkbox-container {
	height: ${getValue(data, ["tokens.css", "checkbox-container", "height"])}px;
	width: ${getValue(data, ["tokens.css", "checkbox-container", "width"])}px;
	border-radius: ${getValue(data, ["tokens.css", "checkbox-container", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "checkbox-container", "border-width"])}px;
}

.drp-checkbox-hit-area {
	height: ${getValue(data, ["tokens.css", "checkbox-hit-area", "height"])}px;
	width: ${getValue(data, ["tokens.css", "checkbox-hit-area", "width"])}px;
}

.drp-checkbox-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-small", "text-decoration"])};
}

.drp-checkbox-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " checkbox-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "checkbox-typography-large", "text-decoration"])};
}

.drp-checkbox-focus-ring {
	border-radius: ${getValue(data, ["tokens.css", "checkbox-focus-ring", "border-radius"])}px;
}

.drp-chip-selectable-container-small {
	height: ${getValue(data, ["tokens.css", "chip-selectable-container-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-selectable-container-small", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-small", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-selectable-container-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-selectable-container-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-selectable-container-small", "border-width"])}px;
}

.drp-chip-selectable-container-medium {
	height: ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-selectable-container-medium", "border-width"])}px;
}

.drp-chip-selectable-container-focus-ring {
	border-radius: ${getValue(data, ["tokens.css", "chip-selectable-container-focus-ring", "border-radius"])}px;
}

.drp-chip-selectable-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-selectable-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-small", "text-decoration"])};
}

.drp-chip-selectable-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-selectable-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-selectable-typography-large", "text-decoration"])};
}

.drp-chip-information-container-xs {
	height: ${getValue(data, ["tokens.css", "chip-information-container-xs", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-information-container-xs", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-information-container-xs", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-information-container-xs", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-information-container-xs", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-information-container-xs", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-information-container-xs", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-information-container-xs", "border-width"])}px;
}

.drp-chip-information-container-small {
	height: ${getValue(data, ["tokens.css", "chip-information-container-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-information-container-small", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-information-container-small", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-information-container-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-information-container-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-information-container-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-information-container-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-information-container-small", "border-width"])}px;
}

.drp-chip-information-container-medium {
	height: ${getValue(data, ["tokens.css", "chip-information-container-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-information-container-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-information-container-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-information-container-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-information-container-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-information-container-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-information-container-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-information-container-medium", "border-width"])}px;
}

.drp-chip-information-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-information-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-small", "text-decoration"])};
}

.drp-chip-information-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-information-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-information-typography-large", "text-decoration"])};
}

.drp-chip-plain-container {
	height: ${getValue(data, ["tokens.css", "chip-plain-container", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-plain-container", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-plain-container", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-plain-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-plain-container", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-plain-container", "gap"])}px;
}

.drp-chip-plain-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-plain-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-small", "text-decoration"])};
}

.drp-chip-plain-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-plain-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-plain-typography-large", "text-decoration"])};
}

.drp-chip-dismissable-container-xs {
	height: ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-dismissible-container-xs", "border-width"])}px;
}

.drp-chip-dismissable-container-small {
	height: ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-dismissible-container-small", "border-width"])}px;
}

.drp-chip-dismissable-container-medium {
	height: ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "chip-dismissible-container-medium", "border-width"])}px;
}

.drp-chip-dismissable-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-dismissible-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "text-decoration"])};
}

.drp-chip-dismissable-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " chip-dismissible-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "text-indent"])};
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "letter-spacing"])};
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "chip-dismissible-typography-small", "text-decoration"])};
}

.drp-dialog-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "dialog-container-bg", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "dialog-container-bg", "border-width"])}px;
}

.drp-drawer-container-left-bg {
	border-radius: ${getValue(data, ["tokens.css", "drawer-container-left-bg", "border-radius"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "drawer-container-left-bg", "border-right-width"])}px;
}

.drp-drawer-container-right-bg {
	border-radius: ${getValue(data, ["tokens.css", "drawer-container-right-bg", "border-radius"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "drawer-container-right-bg", "border-left-width"])}px;
}

.drp-drawer-container-top-bg {
	border-radius: ${getValue(data, ["tokens.css", "drawer-container-top-bg", "border-radius"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "drawer-container-top-bg", "border-bottom-width"])}px;
}

.drp-drawer-container-bottom-bg {
	border-radius: ${getValue(data, ["tokens.css", "drawer-container-bottom-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "drawer-container-bottom-bg", "border-top-width"])}px;
}

.drp-form-control-container-description {
	gap: ${getValue(data, ["tokens.css", "form-control-container-description", "gap"])}px;
}

.drp-form-control-container-bg {
	padding: ${getValue(data, ["tokens.css", "form-control-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "form-control-container-bg", "gap"])}px;
}

.drp-form-control-container-small {
	padding: ${getValue(data, ["tokens.css", "form-control-container-small", "padding-top"])}px ${getValue(data, ["tokens.css", "form-control-container-small", "padding-right"])}px ${getValue(data, ["tokens.css", "form-control-container-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "form-control-container-small", "padding-left"])}px;
}

.drp-form-control-container-medium {
	padding: ${getValue(data, ["tokens.css", "form-control-container-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "form-control-container-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "form-control-container-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "form-control-container-medium", "padding-left"])}px;
}

.drp-form-control-typography-description {
	font: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " form-control-typography-description", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-description", "text-decoration"])};
}

.drp-form-control-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " form-control-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-small", "text-decoration"])};
}

.drp-form-control-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " form-control-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-medium", "text-decoration"])};
}

.drp-form-control-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " form-control-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "form-control-typography-large", "text-decoration"])};
}

.drp-input-standard-outlined-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-large", "border-width"])}px;
}

.drp-input-standard-outlined-container-bg-small {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-standard-outlined-container-bg-small", "border-width"])}px;
}

.drp-input-standard-outlined-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container", "padding-left"])}px;
}

.drp-input-standard-outlined-container-inside {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-container-inside", "gap"])}px;
}

.drp-input-standard-outlined-container-assistive-text-inset {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-container-assistive-text-inset", "gap"])}px;
}

.drp-input-standard-outlined-container-assistive-text-inside {
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-container-assistive-text-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-assistive-text-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-assistive-text-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-container-assistive-text-inside", "padding-left"])}px;
}

.drp-input-standard-outlined-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-outlined-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography", "text-decoration"])};
}

.drp-input-standard-outlined-typography-label {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-outlined-typography-label", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-typography-label", "text-decoration"])};
}

.drp-input-standard-outlined-prefix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-outlined-prefix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-prefix-typography", "text-decoration"])};
}

.drp-input-standard-outlined-prefix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "gap"])}px;
	padding-right: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "padding-right"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-left-width"])}px;
	padding-block: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "padding-block"])}px;
	padding-left: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "padding-left"])}px;
	border-top-left-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-top-left-radius"])}px;
	border-top-right-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-top-right-radius"])}px;
	border-bottom-right-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-bottom-right-radius"])}px;
	border-bottom-left-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container-bg", "border-bottom-left-radius"])}px;
}

.drp-input-standard-outlined-prefix-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-prefix-container", "padding-left"])}px;
}

.drp-input-standard-outlined-suffix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "gap"])}px;
	padding-right: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "padding-right"])}px;
	border-top-left-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-top-left-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-left-width"])}px;
	padding-block: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "padding-block"])}px;
	padding-left: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "padding-left"])}px;
	border-top-right-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-top-right-radius"])}px;
	border-bottom-right-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-bottom-right-radius"])}px;
	border-bottom-left-radius: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container-bg", "border-bottom-left-radius"])}px;
}

.drp-input-standard-outlined-suffix-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-outlined-suffix-container", "padding-left"])}px;
}

.drp-input-standard-outlined-suffix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-outlined-suffix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-outlined-suffix-typography", "text-decoration"])};
}

.drp-input-standard-filled-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-large", "border-width"])}px;
}

.drp-input-standard-filled-container-bg-small {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-standard-filled-container-bg-small", "border-width"])}px;
}

.drp-input-standard-filled-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container", "padding-left"])}px;
}

.drp-input-standard-filled-container-inside {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-container-inside", "gap"])}px;
}

.drp-input-standard-filled-container-assistive-text-inset {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-container-assistive-text-inset", "gap"])}px;
}

.drp-input-standard-filled-container-assistive-text-inside {
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-container-assistive-text-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-assistive-text-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-assistive-text-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-container-assistive-text-inside", "padding-left"])}px;
}

.drp-input-standard-filled-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-filled-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "letter-spacing"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography", "text-decoration"])};
}

.drp-input-standard-filled-typography-label {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-filled-typography-label", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-typography-label", "text-decoration"])};
}

.drp-input-standard-filled-prefix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container-bg", "border-left-width"])}px;
}

.drp-input-standard-filled-prefix-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-prefix-container", "padding-left"])}px;
}

.drp-input-standard-filled-prefix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-filled-prefix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-prefix-typography", "text-decoration"])};
}

.drp-input-standard-filled-suffix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-bottom-left-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container-bg", "border-left-width"])}px;
}

.drp-input-standard-filled-suffix-container {
	gap: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-standard-filled-suffix-container", "padding-left"])}px;
}

.drp-input-standard-filled-suffix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-standard-filled-suffix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-standard-filled-suffix-typography", "text-decoration"])};
}

.drp-input-container-focus-ring {
	border-radius: ${getValue(data, ["tokens.css", "input-container-focus-ring", "border-radius"])}px;
}

.drp-input-material-outlined-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-bottom-left-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-top-width"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-right-width"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-bottom-width"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-left-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-large", "border-bottom-width"])}px;
}

.drp-input-material-outlined-container-bg-small {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-outlined-container-bg-small", "border-width"])}px;
}

.drp-input-material-outlined-container {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container", "padding-left"])}px;
}

.drp-input-material-outlined-container-inside {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-container-inside", "gap"])}px;
}

.drp-input-material-outlined-container-assistive-text-inset {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-container-assistive-text-inset", "gap"])}px;
}

.drp-input-material-outlined-container-assistive-text-inside {
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-container-assistive-text-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-assistive-text-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-assistive-text-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-container-assistive-text-inside", "padding-left"])}px;
}

.drp-input-material-outlined-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-outlined-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography", "text-decoration"])};
}

.drp-input-material-outlined-typography-label {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-outlined-typography-label", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-typography-label", "text-decoration"])};
}

.drp-input-material-outlined-prefix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-top-left-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-top-right-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-bottom-right-radius"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-bottom-left-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container-bg", "border-left-width"])}px;
}

.drp-input-material-outlined-prefix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-prefix-container", "padding-left"])}px;
}

.drp-input-material-outlined-prefix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-outlined-prefix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-prefix-typography", "text-decoration"])};
}

.drp-input-material-outlined-suffix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container-bg", "border-left-width"])}px;
}

.drp-input-material-outlined-suffix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-outlined-suffix-container", "padding-left"])}px;
}

.drp-input-material-outlined-suffix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-outlined-suffix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-outlined-suffix-typography", "text-decoration"])};
}

.drp-input-material-filled-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-large", "border-width"])}px;
}

.drp-input-material-filled-container-bg-small {
	gap: 0px;
	height: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-filled-container-bg-small", "border-width"])}px;
}

.drp-input-material-filled-container {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container", "padding-left"])}px;
}

.drp-input-material-filled-container-label-default {
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container-label-default", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-default", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-default", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-default", "padding-left"])}px;
}

.drp-input-material-filled-container-label-active {
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container-label-active", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-active", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-active", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-label-active", "padding-left"])}px;
}

.drp-input-material-filled-container-inside {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-container-inside", "gap"])}px;
}

.drp-input-material-filled-container-assistive-text-inset {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-container-assistive-text-inset", "gap"])}px;
}

.drp-input-material-filled-container-assistive-text-inside {
	padding: ${getValue(data, ["tokens.css", "input-material-filled-container-assistive-text-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-assistive-text-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-assistive-text-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-container-assistive-text-inside", "padding-left"])}px;
}

.drp-input-material-filled-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-filled-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography", "text-decoration"])};
}

.drp-input-material-filled-typography-label {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-filled-typography-label", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-typography-label", "text-decoration"])};
}

.drp-input-material-filled-prefix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container-bg", "border-left-width"])}px;
}

.drp-input-material-filled-prefix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-prefix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-prefix-container", "padding-left"])}px;
}

.drp-input-material-filled-prefix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-filled-prefix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-prefix-typography", "text-decoration"])};
}

.drp-input-material-filled-suffix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container-bg", "border-left-width"])}px;
}

.drp-input-material-filled-suffix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-filled-suffix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-filled-suffix-container", "padding-left"])}px;
}

.drp-input-material-filled-suffix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-filled-suffix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-filled-suffix-typography", "text-decoration"])};
}

.drp-input-material-plain-container-bg-large {
	gap: 0px;
	height: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-large", "border-width"])}px;
}

.drp-input-material-plain-container-bg-small {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "gap"])}px;
	height: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "input-material-plain-container-bg-small", "border-width"])}px;
}

.drp-input-material-plain-container {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-container", "padding-left"])}px;
}

.drp-input-material-plain-container-inside {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-container-inside", "gap"])}px;
}

.drp-input-material-plain-container-assistive-text-inset {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-container-assistive-text-inset", "gap"])}px;
}

.drp-input-material-plain-container-assistive-text-inside {
	padding: ${getValue(data, ["tokens.css", "input-material-plain-container-assistive-text-inside", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-assistive-text-inside", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-assistive-text-inside", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-container-assistive-text-inside", "padding-left"])}px;
}

.drp-input-material-plain-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-plain-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography", "text-decoration"])};
}

.drp-input-material-plain-typography-label {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-plain-typography-label", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-typography-label", "text-decoration"])};
}

.drp-input-material-plain-prefix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container-bg", "border-left-width"])}px;
}

.drp-input-material-plain-prefix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-prefix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-prefix-container", "padding-left"])}px;
}

.drp-input-material-plain-prefix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-plain-prefix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-prefix-typography", "text-decoration"])};
}

.drp-input-material-plain-suffix-container-bg {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container-bg", "border-left-width"])}px;
}

.drp-input-material-plain-suffix-container {
	gap: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "input-material-plain-suffix-container", "padding-top"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container", "padding-right"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "input-material-plain-suffix-container", "padding-left"])}px;
}

.drp-input-material-plain-suffix-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " input-material-plain-suffix-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "input-material-plain-suffix-typography", "text-decoration"])};
}

.drp-link-container-small {
	height: ${getValue(data, ["tokens.css", "link-container-small", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "link-container-small", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-small", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-small", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-small", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "link-container-small", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "link-container-small", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "link-container-small", "border-width"])}px;
}

.drp-link-container-medium {
	height: ${getValue(data, ["tokens.css", "link-container-medium", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "link-container-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-medium", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "link-container-medium", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "link-container-medium", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "link-container-medium", "border-width"])}px;
}

.drp-link-container-large {
	height: ${getValue(data, ["tokens.css", "link-container-large", "height"])}px;
	padding: ${getValue(data, ["tokens.css", "link-container-large", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-large", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-large", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "link-container-large", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "link-container-large", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "link-container-large", "border-width"])}px;
}

.drp-link-container-focus-ring {
	border-radius: ${getValue(data, ["tokens.css", "link-container-focus-ring", "border-radius"])}px;
}

.drp-link-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " link-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "link-typography-small", "text-decoration"])};
}

.drp-link-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " link-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "link-typography-medium", "text-decoration"])};
}

.drp-link-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " link-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "link-typography-large", "text-decoration"])};
}

.drp-list-item-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "list-item-container-bg", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "list-item-container-bg", "border-width"])}px;
	gap: ${getValue(data, ["tokens.css", "list-item-container-bg", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "list-item-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "list-item-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "list-item-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-item-container-bg", "padding-left"])}px;
}

.drp-list-item-container {
	padding: ${getValue(data, ["tokens.css", "list-item-container", "padding-top"])}px ${getValue(data, ["tokens.css", "list-item-container", "padding-right"])}px ${getValue(data, ["tokens.css", "list-item-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-item-container", "padding-left"])}px;
}

.drp-list-item-container-description {
	gap: ${getValue(data, ["tokens.css", "list-item-container-description", "gap"])}px;
}

.drp-list-item-container-icon {
	padding: ${getValue(data, ["tokens.css", "list-item-container-icon", "padding-top"])}px ${getValue(data, ["tokens.css", "list-item-container-icon", "padding-right"])}px ${getValue(data, ["tokens.css", "list-item-container-icon", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-item-container-icon", "padding-left"])}px;
}

.drp-list-item-container-select-icon {
	padding: ${getValue(data, ["tokens.css", "list-item-container-select-icon", "padding-top"])}px ${getValue(data, ["tokens.css", "list-item-container-select-icon", "padding-right"])}px ${getValue(data, ["tokens.css", "list-item-container-select-icon", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-item-container-select-icon", "padding-left"])}px;
}

.drp-list-item-container-sub-header {
	border-radius: ${getValue(data, ["tokens.css", "list-item-container-sub-header", "border-radius"])}px;
	gap: ${getValue(data, ["tokens.css", "list-item-container-sub-header", "gap"])}px;
	border-width: ${getValue(data, ["tokens.css", "list-item-container-sub-header", "border-width"])}px;
	padding: ${getValue(data, ["tokens.css", "list-item-container-sub-header", "padding-top"])}px ${getValue(data, ["tokens.css", "list-item-container-sub-header", "padding-right"])}px ${getValue(data, ["tokens.css", "list-item-container-sub-header", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-item-container-sub-header", "padding-left"])}px;
}

.drp-list-item-typography-default {
	font: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-default", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-default", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "list-item-typography-default", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " list-item-typography-default", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-list-item-typography-selected {
	font: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " list-item-typography-selected", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-selected", "text-decoration"])};
}

.drp-list-item-typography-description {
	font: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " list-item-typography-description", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "list-item-typography-description", "text-decoration"])};
}

.drp-list-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "list-container-bg", "padding-top"])}px;
	padding: ${getValue(data, ["tokens.css", "list-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "list-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "list-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-container-bg", "padding-left"])}px;
}

.drp-notification-typography-title {
	font: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " notification-typography-title", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-title", "text-decoration"])};
}

.drp-notification-typography-description {
	font: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " notification-typography-description", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "notification-typography-description", "text-decoration"])};
}

.drp-radio-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " radio-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-small", "text-decoration"])};
}

.drp-radio-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " radio-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "radio-typography-large", "text-decoration"])};
}

.drp-slider-typography-title {
	font: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " slider-typography-title", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-title", "text-decoration"])};
}

.drp-slider-typography-range {
	font: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " slider-typography-range", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-range", "text-decoration"])};
}

.drp-slider-typography-input {
	font: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " slider-typography-input", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "slider-typography-input", "text-decoration"])};
}

.drp-snackbar-container-bg {
	padding: ${getValue(data, ["tokens.css", "snackbar-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "padding-left"])}px;
	gap: ${getValue(data, ["tokens.css", "snackbar-container-bg", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "snackbar-container-bg", "border-radius"])}px;
	box-shadow: ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-1", "color"])},
	${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-2", "x"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-2", "y"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-2", "blur"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-2", "spread"])}px ${getValue(data, ["tokens.css", "snackbar-container-bg", "box-shadow-2", "color"])};
}

.drp-snackbar-typography-title {
	font: ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " snackbar-typography-title", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "snackbar-typography-title", "text-decoration"])};
}

.drp-switch-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " switch-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-small", "text-decoration"])};
}

.drp-switch-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " switch-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "switch-typography-large", "text-decoration"])};
}

.drp-tab-contained-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "border-radius"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "padding-left"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "border-left-width"])}px;
	box-shadow: inset ${getValue(data, ["tokens.css", "tab-contained-container-bg", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "box-shadow-1", "color"])};
}

.drp-tab-contained-container-bg:first-child {
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "first-child", "border-radius-top-left"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "first-child", "border-radius-top-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "first-child", "border-radius-bottom-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "first-child", "border-radius-bottom-left"])}px;
}

.drp-tab-contained-container-bg:last-child {
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "last-child", "border-radius-top-left"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "last-child", "border-radius-top-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "last-child", "border-radius-bottom-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "last-child", "border-radius-bottom-left"])}px;
}

.drp-tab-contained-container-bg:only-child {
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-container-bg", "only-child", "border-radius-top-left"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "only-child", "border-radius-top-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "only-child", "border-radius-bottom-right"])}px ${getValue(data, ["tokens.css", "tab-contained-container-bg", "only-child", "border-radius-bottom-left"])}px;
}

.drp-tab-contained-container {
	gap: ${getValue(data, ["tokens.css", "tab-contained-container-default", "gap"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-contained-container-default", "border-bottom-width"])}px;
}

.drp-tab--selected--contained {
	gap: ${getValue(data, ["tokens.css", "tab-contained-container-selected", "gap"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-contained-container-selected", "border-bottom-width"])}px;
}

.drp-tab-contained-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-contained-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-medium", "text-decoration"])};
}

.drp-tab-contained-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-contained-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "text-indent"])}px;
	letter-spacing:${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-large", "text-decoration"])};
}

.drp-tab-contained-typography-selected-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-contained-typography-selected-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-medium", "text-decoration"])};
}

.drp-tab-contained-typography-selected-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-contained-typography-selected-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-contained-typography-selected-large", "text-decoration"])};
}

.drp-tab-contained-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-contained-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-contained-tab-container-bg-large", "border-left-width"])}px;
}

.drp-tab-segment-container-bg {
	padding: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-segment-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-segment-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-segment-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-segment-container-bg", "border-left-width"])}px;
}

.drp-tab-segment-container {
	gap: ${getValue(data, ["tokens.css", "tab-segment-container", "gap"])}px;
}

.drp-tab-segment-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-segment-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-medium", "text-decoration"])};
}

.drp-tab-segment-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-segment-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-segment-typography-large", "text-decoration"])};
}

.drp-tab-segment-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-segment-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-segment-tab-container-bg-large", "border-left-width"])}px;
}

.drp-tab-stacked-container-bg {
	padding: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-stacked-container-bg", "border-left-width"])}px;
}

.drp-tab-stacked-container {
	gap: ${getValue(data, ["tokens.css", "tab-stacked-container", "gap"])}px;
}

.drp-tab-stacked-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-stacked-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-medium", "text-decoration"])};
}

.drp-tab-stacked-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-stacked-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-stacked-typography-large", "text-decoration"])};
}

.drp-tab-stacked-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-stacked-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-stacked-tab-container-bg-large", "border-left-width"])}px;
}

.drp-tab-underlined-inset-container-bg {
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "border-radius"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "padding-left"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-bg", "border-left-width"])}px;
}

.drp-tab-underlined-inset-container {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inset-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inset-container", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container", "padding-left"])}px;
}

.drp-tab-underlined-inset-container-selected-bg {
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "border-radius"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "padding-left"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-container-selected-bg", "border-left-width"])}px;
}

.drp-tab-underlined-inset-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-underlined-inset-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-medium", "text-decoration"])};
}

.drp-tab-underlined-inset-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-underlined-inset-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inset-typography-large", "text-decoration"])};
}

.drp-tab-underlined-inset-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-underlined-inset-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inset-tab-container-bg-large", "border-left-width"])}px;
}

.drp-tab-underlined-inside-container-bg {
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inside-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container-bg", "padding-left"])}px;
}

.drp-tab-underlined-inside-container {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "gap"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "border-radius"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "padding-left"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-container", "border-left-width"])}px;
}

.drp-tab-underlined-inside-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-underlined-inside-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-medium", "text-decoration"])};
}

.drp-tab-underlined-inside-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-underlined-inside-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-underlined-inside-typography-large", "text-decoration"])};
}

.drp-tab-underlined-inside-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-underlined-inside-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-underlined-inside-tab-container-bg-large", "border-left-width"])}px;
}

.drp-tab-vertical-container-bg {
	padding: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-vertical-container-bg", "border-left-width"])}px;
}

.drp-tab-vertical-container {
	gap: ${getValue(data, ["tokens.css", "tab-vertical-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-vertical-container", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-vertical-container", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-vertical-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-vertical-container", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-vertical-container", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-vertical-container", "border-radius"])}px;
}

.drp-tab-vertical-typography-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-vertical-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-medium", "text-decoration"])};
}

.drp-tab-vertical-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tab-vertical-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tab-vertical-typography-large", "text-decoration"])};
}

.drp-tab-vertical-tab-container-bg-medium {
	gap: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-medium", "border-left-width"])}px;
}

.drp-tab-vertical-tab-container-bg-large {
	gap: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "padding-top"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "padding-right"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "padding-left"])}px;
	height: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "height"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "border-radius"])}px;
	border-top-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "border-top-width"])}px;
	border-right-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "border-right-width"])}px;
	border-bottom-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "border-bottom-width"])}px;
	border-left-width: ${getValue(data, ["tokens.css", "tab-vertical-tab-container-bg-large", "border-left-width"])}px;
}

.drp-toggle-button-container-bg-large {
	border-radius: ${getValue(data, ["tokens.css", "toggle-button-container-bg-large", "border-radius"])}px;
}

.drp-toggle-button-container-bg-medium {
	border-radius: ${getValue(data, ["tokens.css", "toggle-button-container-bg-medium", "border-radius"])}px;
}

.drp-toggle-group-typography-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " toggle-group-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-small", "text-decoration"])};
}

.drp-toggle-group-typography-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " toggle-group-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "toggle-group-typography-large", "text-decoration"])};
}

.drp-tooltip-container-bg {
	gap: ${getValue(data, ["tokens.css", "tooltip-container-bg", "gap"])}px;
	box-shadow: ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-1", "color"])},
	${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-2", "x"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-2", "y"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-2", "blur"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-2", "spread"])}px ${getValue(data, ["tokens.css", "tooltip-container-bg", "box-shadow-2", "color"])};
}

.drp-tooltip-container {
	gap: ${getValue(data, ["tokens.css", "tooltip-container", "gap"])}px;
	padding: ${getValue(data, ["tokens.css", "tooltip-container", "padding-top"])}px ${getValue(data, ["tokens.css", "tooltip-container", "padding-right"])}px ${getValue(data, ["tokens.css", "tooltip-container", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tooltip-container", "padding-left"])}px;
	border-radius: ${getValue(data, ["tokens.css", "tooltip-container", "border-radius"])}px;
	border-width: ${getValue(data, ["tokens.css", "tooltip-container", "border-width"])}px;
}

.drp-tooltip-container-title {
	gap: ${getValue(data, ["tokens.css", "tooltip-container-title", "gap"])}px;
}

.drp-tooltip-container-link {
	padding: ${getValue(data, ["tokens.css", "tooltip-container-link", "padding-top"])}px ${getValue(data, ["tokens.css", "tooltip-container-link", "padding-right"])}px ${getValue(data, ["tokens.css", "tooltip-container-link", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tooltip-container-link", "padding-left"])}px;
}

.drp-tooltip-typography {
	font: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tooltip-typography", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography", "text-decoration"])};
}

.drp-tooltip-typography-title {
	font: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " tooltip-typography-title", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "tooltip-typography-title", "text-decoration"])};
}

.drp-typography-body-1-light {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-light", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-light", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-light", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-light", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-light", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-1-regular {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-1-regular-italic {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular-italic", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular-italic", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular-italic", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular-italic", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular-italic", "letter-spacing"])}px;
	text-decoration: none;
	font-style: italic;
}

.drp-typography-body-1-medium {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-medium", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-medium", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-medium", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-1-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-1-extra-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-extra-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-extra-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-extra-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-extra-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-extra-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-1-link {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-link", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-link", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-link", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-link", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-link", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "base-typography", "body-1-link", "text-decoration-line"])};
}

.drp-typography-body-1-all-caps {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-all-caps", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-all-caps", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-all-caps", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-all-caps", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "base-typography", "body-1-all-caps", "text-transform"])};
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-1-all-caps", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-1-list {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-2-light {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-light", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-light", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-light", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-light", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-light", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-2-regular {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-2-regular-italic {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-regular-italic", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-regular-italic", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-regular-italic", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-regular-italic", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-regular-italic", "letter-spacing"])}px;
	text-decoration: none;
	font-style: italic;
}

.drp-typography-body-2-medium {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-medium", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-medium", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-medium", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-2-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-2-extra-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-extra-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-extra-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-extra-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-extra-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-extra-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-2-link {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-link", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-link", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-link", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-link", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-link", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "base-typography", "body-2-link", "text-decoration-line"])};
}

.drp-typography-body-2-all-caps {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-all-caps", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-all-caps", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-all-caps", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-all-caps", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "base-typography", "body-2-all-caps", "text-transform"])};
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-2-all-caps", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-2-list {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-2-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-2-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-3-light {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-light", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-light", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-light", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-light", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-light", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-3-regular {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-3-regular-italic {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-regular-italic", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-regular-italic", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-regular-italic", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-regular-italic", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-regular-italic", "letter-spacing"])}px;
	text-decoration: none;
	font-style: italic;
}

.drp-typography-body-3-medium {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-medium", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-medium", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-medium", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-3-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-3-extra-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-extra-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-extra-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-extra-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-extra-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-extra-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-3-link {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-link", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-link", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-link", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-link", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-link", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "base-typography", "body-3-link", "text-decoration-line"])};
}

.drp-typography-body-3-all-caps {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-all-caps", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-all-caps", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-all-caps", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-all-caps", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "base-typography", "body-3-all-caps", "text-transform"])};
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "body-3-all-caps", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-body-3-list {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-3-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-3-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: 0;
	text-decoration: none;
}

.drp-typography-body-xl-regular {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0px;
	letter-spacing: 0px;
	text-decoration: none;
}

.drp-typography-body-xl-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: 0;
	text-decoration: none;
}

.drp-typography-body-xl-link {
	font: ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "body-1-regular", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " body-1-regular", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: 0;
	text-decoration: underline;
}

.drp-typography-button-large {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " button-contained-typography-large", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-large", "text-decoration"])};
}

.drp-typography-button-medium {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " button-contained-typography-medium", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-medium", "text-decoration"])};
}

.drp-typography-button-small {
	font: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "font-weight-dev"])} ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "font-size"])}px/${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "line-height"])}px "${getValue(data, ["tokens.css", " component-typography", " button-contained-typography-small", " font-family"])}",
	sans-serif;
	text-transform: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-transform"])};
	text-indent: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-indent"])}px;
	letter-spacing: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "letter-spacing"])}px;
	text-decoration: ${getValue(data, ["tokens.css", "component-typography", "button-contained-typography-small", "text-decoration"])};
}

.drp-typography-heading-1 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-1-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-2 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-2-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-3 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-3-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-4 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-4-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-5 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-5-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-6 {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-heading-6-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-display-1 {
	font: ${getValue(data, ["tokens.css", "base-typography", "display-1", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-display-1-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-display-2 {
	font: ${getValue(data, ["tokens.css", "base-typography", "display-2", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2", "letter-spacing"])}px;
	text-decoration: none;
}

.drp-typography-display-2-bold {
	font: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2-bold", " font-family"])}",
	sans-serif;
	text-transform: none;
	text-indent: 0;
	letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "letter-spacing"])}px;
	text-decoration: none;
}

@media (min-width: 768px) {
	.drp-accordion-container-summary-bg {
		height: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "height"])}px;
		background: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "background"])};
		padding-top: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "padding-top"])}px;
		padding-right: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "padding-right"])}px;
		padding-bottom: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "padding-bottom"])}px;
		padding-left: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 768px", "padding-left"])}px;
		box-shadow: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
	}

	.drp-accordion-secondary-container-summary-bg {
		height: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "height"])}px;
		background: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "background"])};
		padding-top: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "padding-top"])}px;
		padding-right: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "padding-right"])}px;
		padding-bottom: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "padding-bottom"])}px;
		padding-left: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 768px", "padding-left"])}px;
		box-shadow: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
	}

	.drp-typography-heading-1 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-1-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-2 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-2-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-3 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-3-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-4 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-4-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-5 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-5-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-6 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-6-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-1 {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-1-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-2 {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-2-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 768px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 768px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 768px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2-bold", " min-width: 768px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 768px", "letter-spacing"])}px;
		text-decoration: none;
	}
}

@media (min-width: 1025px) {
	.drp-accordion-container-summary-bg {
		height: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "height"])}px;
		background: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "background"])};
		padding-top: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "padding-top"])}px;
		padding-right: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "padding-right"])}px;
		padding-bottom: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "padding-bottom"])}px;
		padding-left: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "min-width: 1025px", "padding-left"])}px;
		box-shadow: ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
	}

	.drp-accordion-secondary-container-summary-bg {
		height: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "height"])}px;
		background: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "background"])};
		padding-top: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "padding-top"])}px;
		padding-right: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "padding-right"])}px;
		padding-bottom: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "padding-bottom"])}px;
		padding-left: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "min-width: 1025px", "padding-left"])}px;
		box-shadow: ${getValue(data, ["tokens.css", "accordion-secondary-container-summary-bg", "box-shadow", "x"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "y"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "blur"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "spread"])}px ${getValue(data, ["tokens.css", "accordion-container-summary-bg", "box-shadow", "color"])};
	}

	.drp-banner-container-inside {
		padding: ${getValue(data, ["tokens.css", "banner-container-inside", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "banner-container-inside", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "banner-container-inside", "min-width: 1025px", "gap"])}px;
	}

	.drp-banner-container-bg {
		border-radius: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "border-radius"])}px;
		box-shadow: ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "box-shadow-1", "color"])};
		border-left-width: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "border-left-width"])}px;
		border-top-width: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "border-top-width"])}px;
		border-right-width: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "border-right-width"])}px;
		border-bottom-width: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "border-bottom-width"])}px;
		padding: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "banner-container-bg", "min-width: 1025px", "gap"])}px;
	}

	.drp-breadcrumb-container {
		height: ${getValue(data, ["tokens.css", "breadcrumb-container", "min-width: 1025px", "height"])}px;
		gap: ${getValue(data, ["tokens.css", "breadcrumb-container", "min-width: 1025px", "gap"])}px;
	}

	.drp-checkbox-hit-area {
		height: ${getValue(data, ["tokens.css", "checkbox-hit-area", "min-width: 1025px", "height"])}px;
		width: ${getValue(data, ["tokens.css", "checkbox-hit-area", "min-width: 1025px", "width"])}px;
	}

	.drp-form-control-container-bg {
		padding: ${getValue(data, ["tokens.css", "form-control-container-bg", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "form-control-container-bg", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "form-control-container-bg", "min-width: 1025px", "gap"])}px;
	}

	.drp-link-container-small {
		height: ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "height"])}px;
		padding: ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "gap"])}px;
		border-radius: ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "border-radius"])}px;
		border-width: ${getValue(data, ["tokens.css", "link-container-small", "min-width: 1025px", "border-width"])}px;
	}

	.drp-link-container-medium {
		height: ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "height"])}px;
		padding: ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "gap"])}px;
		border-radius: ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "border-radius"])}px;
		border-width: ${getValue(data, ["tokens.css", "link-container-medium", "min-width: 1025px", "border-width"])}px;
	}

	.drp-link-container-large {
		height: ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "height"])}px;
		padding: ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "padding-left"])}px;
		gap: ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "gap"])}px;
		border-radius: ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "border-radius"])}px;
		border-width: ${getValue(data, ["tokens.css", "link-container-large", "min-width: 1025px", "border-width"])}px;
	}

	.drp-list-container-bg {
		padding: ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "padding-left"])}px;
		border-radius: ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "border-radius"])}px;
		border-width: ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "border-width"])}px;
		box-shadow:
			0 1px 2px 0 rgba(0, 0, 0, 0.1),
			0 1px 1px 0 rgba(0, 0, 0, 0.06);
		gap: ${getValue(data, ["tokens.css", "list-container-bg", "min-width: 1025px", "gap"])}px;
	}

	.drp-tooltip-container {
		gap: ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "gap"])}px;
		padding: ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "padding-top"])}px ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "padding-right"])}px ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "padding-bottom"])}px ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "padding-left"])}px;
		border-radius: ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "border-radius"])}px;
		border-width: ${getValue(data, ["tokens.css", "tooltip-container", "min-width: 1025px", "border-width"])}px;
	}

	.drp-typography-heading-1 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-1-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-1-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-1-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-2 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-2-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-2-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-2-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-3 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-3-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-3-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-3-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-4 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-4-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-4-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-4-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-5 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-5-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-5-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-5-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-6 {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-heading-6-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " headline-6-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "headline-6-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-1 {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-1-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-1-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-1-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-2 {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}

	.drp-typography-display-2-bold {
		font: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 1025px", "font-weight-dev"])} ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 1025px", "font-size"])}px/${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 1025px", "line-height"])}px "${getValue(data, ["tokens.css", " base-typography", " display-2-bold", " min-width: 1025px", " font-family"])}", sans-serif;
		text-transform: none;
		text-indent: 0px;
		letter-spacing: ${getValue(data, ["tokens.css", "base-typography", "display-2-bold", "min-width: 1025px", "letter-spacing"])}px;
		text-decoration: none;
	}
}

.drp-button-contained-color-standard {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-standard", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-standard", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard", "color"])};
}

.drp-button-contained-color-standard .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard", "icon-color"])};
}

.drp-button-contained-color-standard:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-hover", "color$$rgb"])};
}

.drp-button-contained-color-standard:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-hover", "icon-color$$rgb"])};
}

.drp-button-contained-color-standard:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-active", "color$$rgb"])};
}

.drp-button-contained-color-standard:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-active", "icon-color$$rgb"])};
}

.drp-button-contained-color-standard.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-standard-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-disabled", "color"])};
}

.drp-button-contained-color-standard.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-standard-disabled", "icon-color"])};
}

.drp-button-contained-color-primary-filled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled", "color"])};
}

.drp-button-contained-color-primary-filled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled", "icon-color"])};
}

.drp-button-contained-color-primary-filled:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-hover", "color"])};
}

.drp-button-contained-color-primary-filled:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-hover", "icon-color"])};
}

.drp-button-contained-color-primary-filled:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-active", "color"])};
}

.drp-button-contained-color-primary-filled:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-active", "icon-color"])};
}

.drp-button-contained-color-primary-filled.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-disabled", "color"])};
}

.drp-button-contained-color-primary-filled.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-filled-disabled", "icon-color"])};
}

.drp-button-contained-color-primary-outlined {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined", "color"])};
}

.drp-button-contained-color-primary-outlined .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined", "icon-color"])};
}

.drp-button-contained-color-primary-outlined:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-hover", "color"])};
}

.drp-button-contained-color-primary-outlined:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-hover", "icon-color"])};
}

.drp-button-contained-color-primary-outlined:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-active", "color"])};
}

.drp-button-contained-color-primary-outlined:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-active", "icon-color"])};
}

.drp-button-contained-color-primary-outlined.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-disabled", "color"])};
}

.drp-button-contained-color-primary-outlined.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-outlined-disabled", "icon-color"])};
}

.drp-button-contained-color-primary-plain {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain", "color"])};
}

.drp-button-contained-color-primary-plain .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain", "icon-color"])};
}

.drp-button-contained-color-primary-plain:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-hover", "color"])};
}

.drp-button-contained-color-primary-plain:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-hover", "icon-color"])};
}

.drp-button-contained-color-primary-plain:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-active", "color"])};
}

.drp-button-contained-color-primary-plain:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-active", "icon-color"])};
}

.drp-button-contained-color-primary-plain.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-disabled", "color"])};
}

.drp-button-contained-color-primary-plain.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-primary-plain-disabled", "icon-color"])};
}

.drp-button-contained-color-secondary-filled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled", "color"])};
}

.drp-button-contained-color-secondary-filled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled", "icon-color"])};
}

.drp-button-contained-color-secondary-filled:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-hover", "color"])};
}

.drp-button-contained-color-secondary-filled:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-hover", "icon-color"])};
}

.drp-button-contained-color-secondary-filled:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-active", "color"])};
}

.drp-button-contained-color-secondary-filled:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-active", "icon-color"])};
}

.drp-button-contained-color-secondary-filled.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-disabled", "color"])};
}

.drp-button-contained-color-secondary-filled.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-filled-disabled", "icon-color"])};
}

.drp-button-contained-color-secondary-outlined {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined", "color"])};
}

.drp-button-contained-color-secondary-outlined .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined", "icon-color"])};
}

.drp-button-contained-color-secondary-outlined:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-hover", "color"])};
}

.drp-button-contained-color-secondary-outlined:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-hover", "icon-color"])};
}

.drp-button-contained-color-secondary-outlined:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-active", "color"])};
}

.drp-button-contained-color-secondary-outlined:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-active", "icon-color"])};
}

.drp-button-contained-color-secondary-outlined.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-disabled", "color"])};
}

.drp-button-contained-color-secondary-outlined.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-outlined-disabled", "icon-color"])};
}

.drp-button-contained-color-secondary-plain {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain", "color"])};
}

.drp-button-contained-color-secondary-plain .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain", "icon-color"])};
}

.drp-button-contained-color-secondary-plain:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-hover", "color"])};
}

.drp-button-contained-color-secondary-plain:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-hover", "icon-color"])};
}

.drp-button-contained-color-secondary-plain:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-active", "color"])};
}

.drp-button-contained-color-secondary-plain:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-active", "icon-color"])};
}

.drp-button-contained-color-secondary-plain.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-disabled", "color"])};
}

.drp-button-contained-color-secondary-plain.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-secondary-plain-disabled", "icon-color"])};
}

.drp-button-contained-color-destructive-filled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled", "color"])};
}

.drp-button-contained-color-destructive-filled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled", "icon-color"])};
}

.drp-button-contained-color-destructive-filled:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-hover", "color"])};
}

.drp-button-contained-color-destructive-filled:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-hover", "icon-color"])};
}

.drp-button-contained-color-destructive-filled:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-active", "color"])};
}

.drp-button-contained-color-destructive-filled:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-active", "icon-color"])};
}

.drp-button-contained-color-destructive-filled.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-disabled", "color"])};
}

.drp-button-contained-color-destructive-filled.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-filled-disabled", "icon-color"])};
}

.drp-button-contained-color-destructive-outlined {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined", "color"])};
}

.drp-button-contained-color-destructive-outlined .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined", "icon-color"])};
}

.drp-button-contained-color-destructive-outlined:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-hover", "color"])};
}

.drp-button-contained-color-destructive-outlined:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-hover", "icon-color"])};
}

.drp-button-contained-color-destructive-outlined:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-active", "color"])};
}

.drp-button-contained-color-destructive-outlined:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-active", "icon-color"])};
}

.drp-button-contained-color-destructive-outlined.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-disabled", "color"])};
}

.drp-button-contained-color-destructive-outlined.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-outlined-disabled", "icon-color"])};
}

.drp-button-contained-color-destructive-plain {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain", "color"])};
}

.drp-button-contained-color-destructive-plain .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain", "icon-color"])};
}

.drp-button-contained-color-destructive-plain:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-hover", "color"])};
}

.drp-button-contained-color-destructive-plain:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-hover", "icon-color"])};
}

.drp-button-contained-color-destructive-plain:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-active", "color"])};
}

.drp-button-contained-color-destructive-plain:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-active", "icon-color"])};
}

.drp-button-contained-color-destructive-plain.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-disabled", "color"])};
}

.drp-button-contained-color-destructive-plain.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-destructive-plain-disabled", "icon-color"])};
}

.drp-button-contained-color-neutral-filled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled", "color"])};
}

.drp-button-contained-color-neutral-filled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled", "icon-color"])};
}

.drp-button-contained-color-neutral-filled:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-hover", "background-color$$rgb"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-hover", "color"])};
}

.drp-button-contained-color-neutral-filled:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-hover", "icon-color"])};
}

.drp-button-contained-color-neutral-filled:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-active", "background-color$$rgb"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-active", "color"])};
}

.drp-button-contained-color-neutral-filled:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-active", "icon-color"])};
}

.drp-button-contained-color-neutral-filled.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-disabled", "color"])};
}

.drp-button-contained-color-neutral-filled.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-filled-disabled", "icon-color"])};
}

.drp-button-contained-color-neutral-outlined {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined", "color"])};
}

.drp-button-contained-color-neutral-outlined .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined", "icon-color"])};
}

.drp-button-contained-color-neutral-outlined:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-hover", "border-color$$rgb"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-hover", "color$$rgb"])};
}

.drp-button-contained-color-neutral-outlined:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-hover", "icon-color$$rgb"])};
}

.drp-button-contained-color-neutral-outlined:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-active", "border-color$$rgb"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-active", "color$$rgb"])};
}

.drp-button-contained-color-neutral-outlined:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-active", "icon-color$$rgb"])};
}

.drp-button-contained-color-neutral-outlined.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-disabled", "color"])};
}

.drp-button-contained-color-neutral-outlined.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-outlined-disabled", "icon-color"])};
}

.drp-button-contained-color-neutral-plain {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain", "color"])};
}

.drp-button-contained-color-neutral-plain .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain", "icon-color"])};
}

.drp-button-contained-color-neutral-plain:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-hover", "color$$rgb"])};
}

.drp-button-contained-color-neutral-plain:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-hover", "icon-color$$rgb"])};
}

.drp-button-contained-color-neutral-plain:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-active", "color$$rgb"])};
}

.drp-button-contained-color-neutral-plain:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-active", "icon-color$$rgb"])};
}

.drp-button-contained-color-neutral-plain.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-disabled", "color"])};
}

.drp-button-contained-color-neutral-plain.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-neutral-plain-disabled", "icon-color"])};
}

.drp-button-contained-color-inverse-filled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled", "color"])};
}

.drp-button-contained-color-inverse-filled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled", "icon-color"])};
}

.drp-button-contained-color-inverse-filled:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-hover", "color"])};
}

.drp-button-contained-color-inverse-filled:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-hover", "icon-color"])};
}

.drp-button-contained-color-inverse-filled:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-active", "color"])};
}

.drp-button-contained-color-inverse-filled:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-active", "icon-color"])};
}

.drp-button-contained-color-inverse-filled.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-disabled", "color"])};
}

.drp-button-contained-color-inverse-filled.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-filled-disabled", "icon-color"])};
}

.drp-button-contained-color-inverse-outlined {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined", "color"])};
}

.drp-button-contained-color-inverse-outlined .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined", "icon-color"])};
}

.drp-button-contained-color-inverse-outlined:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-hover", "color"])};
}

.drp-button-contained-color-inverse-outlined:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-hover", "icon-color"])};
}

.drp-button-contained-color-inverse-outlined:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-active", "color"])};
}

.drp-button-contained-color-inverse-outlined:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-active", "icon-color"])};
}

.drp-button-contained-color-inverse-outlined.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-disabled", "color"])};
}

.drp-button-contained-color-inverse-outlined.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-outlined-disabled", "icon-color"])};
}

.drp-button-contained-color-inverse-plain {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain", "color"])};
}

.drp-button-contained-color-inverse-plain .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain", "icon-color"])};
}

.drp-button-contained-color-inverse-plain:hover {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-hover", "color"])};
}

.drp-button-contained-color-inverse-plain:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-hover", "icon-color"])};
}

.drp-button-contained-color-inverse-plain:active {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-active", "color"])};
}

.drp-button-contained-color-inverse-plain:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-active", "icon-color"])};
}

.drp-button-contained-color-inverse-plain.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-disabled", "color"])};
}

.drp-button-contained-color-inverse-plain.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-contained-color-inverse-plain-disabled", "icon-color"])};
}

.drp-button-link-color-primary {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary", "color"])};
}

.drp-button-link-color-primary .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary", "icon-color"])};
}

.drp-button-link-color-primary:hover {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-hover", "color"])};
}

.drp-button-link-color-primary:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-hover", "icon-color"])};
}

.drp-button-link-color-primary:active {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-active", "color"])};
}

.drp-button-link-color-primary:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-active", "icon-color"])};
}

.drp-button-link-color-primary.drp-disabled {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-disabled", "color"])};
}

.drp-button-link-color-primary.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-primary-disabled", "icon-color"])};
}

.drp-button-link-color-secondary {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary", "color"])};
}

.drp-button-link-color-secondary .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary", "icon-color"])};
}

.drp-button-link-color-secondary:hover {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-hover", "color"])};
}

.drp-button-link-color-secondary:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-hover", "icon-color"])};
}

.drp-button-link-color-secondary:active {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-active", "color"])};
}

.drp-button-link-color-secondary:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-active", "icon-color"])};
}

.drp-button-link-color-secondary.drp-disabled {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-disabled", "color"])};
}

.drp-button-link-color-secondary.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-secondary-disabled", "icon-color"])};
}

.drp-button-link-color-destructive {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive", "color"])};
}

.drp-button-link-color-destructive .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive", "icon-color"])};
}

.drp-button-link-color-destructive:hover {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-hover", "color"])};
}

.drp-button-link-color-destructive:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-hover", "icon-color"])};
}

.drp-button-link-color-destructive:active {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-active", "color"])};
}

.drp-button-link-color-destructive:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-active", "icon-color"])};
}

.drp-button-link-color-destructive.drp-disabled {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-disabled", "color"])};
}

.drp-button-link-color-destructive.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-destructive-disabled", "icon-color"])};
}

.drp-button-link-color-neutral {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral", "color"])};
}

.drp-button-link-color-neutral .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral", "icon-color"])};
}

.drp-button-link-color-neutral:hover {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-hover", "color$$rgb"])};
}

.drp-button-link-color-neutral:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-hover", "icon-color"])};
}

.drp-button-link-color-neutral:active {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-active", "color$$rgb"])};
}

.drp-button-link-color-neutral:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-active", "icon-color"])};
}

.drp-button-link-color-neutral.drp-disabled {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-disabled", "color"])};
}

.drp-button-link-color-neutral.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-neutral-disabled", "icon-color"])};
}

.drp-button-link-color-inverse {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse", "color"])};
}

.drp-button-link-color-inverse .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse", "icon-color"])};
}

.drp-button-link-color-inverse:hover {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-hover", "color"])};
}

.drp-button-link-color-inverse:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-hover", "icon-color"])};
}

.drp-button-link-color-inverse:active {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-active", "color"])};
}

.drp-button-link-color-inverse:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-active", "icon-color"])};
}

.drp-button-link-color-inverse.drp-disabled {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-disabled", "color"])};
}

.drp-button-link-color-inverse.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "button-link-color-inverse-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-1 {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1", "color"])};
}

.drp-toggle-button-color-option-1 .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1", "icon-color"])};
}

.drp-toggle-button-color-option-1:hover {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-hover", "border-color$$rgb"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-hover", "color$$rgb"])};
}

.drp-toggle-button-color-option-1:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-hover", "icon-color$$rgb"])};
}

.drp-toggle-button-color-option-1:active {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-active", "border-color$$rgb"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-active", "color$$rgb"])};
}

.drp-toggle-button-color-option-1:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-active", "icon-color$$rgb"])};
}

.drp-toggle-button-color-option-1.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-disabled", "color"])};
}

.drp-toggle-button-color-option-1.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-1-selected {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected", "color"])};
}

.drp-toggle-button-color-option-1-selected .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected", "icon-color"])};
}

.drp-toggle-button-color-option-1-selected:hover {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-hover", "color"])};
}

.drp-toggle-button-color-option-1-selected:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-hover", "icon-color"])};
}

.drp-toggle-button-color-option-1-selected:active {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-active", "color"])};
}

.drp-toggle-button-color-option-1-selected:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-active", "icon-color"])};
}

.drp-toggle-button-color-option-1-selected.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-disabled", "color"])};
}

.drp-toggle-button-color-option-1-selected.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-1-selected-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-2 {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2", "color"])};
}

.drp-toggle-button-color-option-2 .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2", "icon-color"])};
}

.drp-toggle-button-color-option-2:hover {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-hover", "color$$rgb"])};
}

.drp-toggle-button-color-option-2:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-hover", "icon-color$$rgb"])};
}

.drp-toggle-button-color-option-2:active {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-active", "color$$rgb"])};
}

.drp-toggle-button-color-option-2:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-active", "icon-color$$rgb"])};
}

.drp-toggle-button-color-option-2.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-disabled", "color"])};
}

.drp-toggle-button-color-option-2.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-2-selected {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected", "color"])};
}

.drp-toggle-button-color-option-2-selected .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected", "icon-color"])};
}

.drp-toggle-button-color-option-2-selected:hover {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-hover", "color"])};
}

.drp-toggle-button-color-option-2-selected:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-hover", "icon-color"])};
}

.drp-toggle-button-color-option-2-selected:active {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-active", "color"])};
}

.drp-toggle-button-color-option-2-selected:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-active", "icon-color"])};
}

.drp-toggle-button-color-option-2-selected.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-disabled", "color"])};
}

.drp-toggle-button-color-option-2-selected.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-2-selected-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-3 {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3", "color"])};
}

.drp-toggle-button-color-option-3 .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3", "icon-color"])};
}

.drp-toggle-button-color-option-3:hover {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-hover", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-hover", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-hover", "color"])};
}

.drp-toggle-button-color-option-3:hover .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-hover", "icon-color"])};
}

.drp-toggle-button-color-option-3:active {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-active", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-active", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-active", "color"])};
}

.drp-toggle-button-color-option-3:active .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-active", "icon-color"])};
}

.drp-toggle-button-color-option-3.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-disabled", "background-color"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-disabled", "color"])};
}

.drp-toggle-button-color-option-3.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-disabled", "icon-color"])};
}

.drp-toggle-button-color-option-3-selected {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected", "background-color$$rgb"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected", "color"])};
}

.drp-toggle-button-color-option-3-selected .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected", "icon-color"])};
}

.drp-toggle-button-color-option-3-selected.drp-disabled {
	background-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-disabled", "background-color$$rgb"])};
	border-color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-disabled", "border-color"])};
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-disabled", "color"])};
}

.drp-toggle-button-color-option-3-selected.drp-disabled .drp-icon {
	color: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-disabled", "icon-color"])};
}

.drp-configurator-compare-highlight {
	background: ${getValue(data, ["tokens.css", "configurator-compare-highlight", "background"])};
}

.drp-button:focus-visible,
.drp-iconButton:focus-visible,
.drp-tab:focus-visible .drp-tab__label {
	outline: ${getValue(data, ["tokens.css", "focus-ring", "outline-width-md"])}px ${getValue(data, ["tokens.css", "focus-ring", "outline-style"])} ${getValue(data, ["tokens.css", "focus-ring", "outline-color"])};
	outline-offset: ${getValue(data, ["tokens.css", "focus-ring", "outline-offset-md"])}px;
}

.drp-card-rounded {
	border-radius: ${getValue(data, ["tokens.css", "card", "border-radius"])}px;
}

body {
	--aec-accordion-color-bg-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-bg-default"])};
	--aec-accordion-color-bg-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-bg-hover"])};
	--aec-accordion-color-bg-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-bg-active"])};
	--aec-accordion-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-bg-disabled"])};
	--aec-accordion-color-border-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-border-default"])};
	--aec-accordion-color-border-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-border-hover"])};
	--aec-accordion-color-border-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-border-active"])};
	--aec-accordion-color-border-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-border-disabled"])};
	--aec-accordion-color-text-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-text-default"])};
	--aec-accordion-color-text-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-text-hover"])};
	--aec-accordion-color-text-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-text-active"])};
	--aec-accordion-color-text-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-text-disabled"])};
	--aec-accordion-color-icon-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-icon-default"])};
	--aec-accordion-color-icon-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-icon-hover"])};
	--aec-accordion-color-icon-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-icon-active"])};
	--aec-accordion-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-icon-disabled"])};
	--aec-accordion-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-bg-default"])};
	--aec-accordion-color-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-bg-hover"])};
	--aec-accordion-color-selected-bg-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-bg-active"])};
	--aec-accordion-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-bg-disabled"])};
	--aec-accordion-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-border-default"])};
	--aec-accordion-color-selected-border-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-border-hover"])};
	--aec-accordion-color-selected-border-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-border-active"])};
	--aec-accordion-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-border-disabled"])};
	--aec-accordion-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-text-default"])};
	--aec-accordion-color-selected-text-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-text-hover"])};
	--aec-accordion-color-selected-text-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-text-active"])};
	--aec-accordion-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-text-disabled"])};
	--aec-accordion-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-icon-default"])};
	--aec-accordion-color-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-icon-hover"])};
	--aec-accordion-color-selected-icon-active: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-icon-active"])};
	--aec-accordion-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "accordion", "color-selected-icon-disabled"])};
	--aec-accordion-secondary-color-bg-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-bg-default"])};
	--aec-accordion-secondary-color-bg-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-bg-hover"])};
	--aec-accordion-secondary-color-bg-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-bg-active"])};
	--aec-accordion-secondary-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-bg-disabled"])};
	--aec-accordion-secondary-color-border-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-border-default"])};
	--aec-accordion-secondary-color-border-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-border-hover"])};
	--aec-accordion-secondary-color-border-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-border-active"])};
	--aec-accordion-secondary-color-border-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-border-disabled"])};
	--aec-accordion-secondary-color-text-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-text-default"])};
	--aec-accordion-secondary-color-text-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-text-hover"])};
	--aec-accordion-secondary-color-text-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-text-active"])};
	--aec-accordion-secondary-color-text-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-text-disabled"])};
	--aec-accordion-secondary-color-icon-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-icon-default"])};
	--aec-accordion-secondary-color-icon-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-icon-hover"])};
	--aec-accordion-secondary-color-icon-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-icon-active"])};
	--aec-accordion-secondary-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-icon-disabled"])};
	--aec-accordion-secondary-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-bg-default"])};
	--aec-accordion-secondary-color-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-bg-hover"])};
	--aec-accordion-secondary-color-selected-bg-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-bg-active"])};
	--aec-accordion-secondary-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-bg-disabled"])};
	--aec-accordion-secondary-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-border-default"])};
	--aec-accordion-secondary-color-selected-border-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-border-hover"])};
	--aec-accordion-secondary-color-selected-border-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-border-active"])};
	--aec-accordion-secondary-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-border-disabled"])};
	--aec-accordion-secondary-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-text-default"])};
	--aec-accordion-secondary-color-selected-text-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-text-hover"])};
	--aec-accordion-secondary-color-selected-text-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-text-active"])};
	--aec-accordion-secondary-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-text-disabled"])};
	--aec-accordion-secondary-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-icon-default"])};
	--aec-accordion-secondary-color-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-icon-hover"])};
	--aec-accordion-secondary-color-selected-icon-active: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-icon-active"])};
	--aec-accordion-secondary-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "accordion-secondary", "color-selected-icon-disabled"])};
	--aec-assistive-text-color-neutral-text: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-neutral-text"])};
	--aec-assistive-text-color-neutral-icon: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-neutral-icon"])};
	--aec-assistive-text-color-error-text: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-error-text"])};
	--aec-assistive-text-color-error-icon: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-error-icon"])};
	--aec-assistive-text-color-success-text: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-success-text"])};
	--aec-assistive-text-color-success-icon: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-success-icon"])};
	--aec-assistive-text-color-warning-text: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-warning-text"])};
	--aec-assistive-text-color-warning-icon: ${getValue(data, ["tokens.css", "body", "assistive-text", "color-warning-icon"])};
	--aec-badge-color-primary-bg: ${getValue(data, ["tokens.css", "body", "badge", "color-primary-bg"])};
	--aec-badge-color-primary-border: ${getValue(data, ["tokens.css", "body", "badge", "color-primary-border"])};
	--aec-badge-color-primary-text: ${getValue(data, ["tokens.css", "body", "badge", "color-primary-text"])};
	--aec-badge-color-black-bg: ${getValue(data, ["tokens.css", "body", "badge", "color-black-bg"])};
	--aec-badge-color-black-border: ${getValue(data, ["tokens.css", "body", "badge", "color-black-border"])};
	--aec-badge-color-black-text: ${getValue(data, ["tokens.css", "body", "badge", "color-black-text"])};
	--aec-badge-color-white-bg: ${getValue(data, ["tokens.css", "body", "badge", "color-white-bg"])};
	--aec-badge-color-white-border: ${getValue(data, ["tokens.css", "body", "badge", "color-white-border"])};
	--aec-badge-color-white-text: ${getValue(data, ["tokens.css", "body", "badge", "color-white-text"])};
	--aec-banner-color-bg: ${getValue(data, ["tokens.css", "body", "banner", "color-bg$$rgb"])};
	--aec-banner-color-border: ${getValue(data, ["tokens.css", "body", "banner", "color-border$$rgb"])};
	--aec-banner-color-title: ${getValue(data, ["tokens.css", "body", "banner", "color-title"])};
	--aec-banner-color-description: ${getValue(data, ["tokens.css", "body", "banner", "color-description"])};
	--aec-banner-color-icon: ${getValue(data, ["tokens.css", "body", "banner", "banner-color-icon"])};
	--aec-breadcrumb-color-text-default: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-default"])};
	--aec-breadcrumb-color-text-hover: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-hover"])};
	--aec-breadcrumb-color-text-active: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-active"])};
	--aec-breadcrumb-color-text-selected: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-selected"])};
	--aec-breadcrumb-color-text-selected-hover: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-selected-hover"])};
	--aec-breadcrumb-color-text-selected-active: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-selected-active"])};
	--aec-breadcrumb-color-text-disabled: ${getValue(data, ["tokens.css", "body", "breadcrumb", "color-text-disabled"])};
	--aec-breadcrumb-color-icon-default: ${getValue(data, ["tokens.css", "body", "breadcrumb", "breadcrumb-color-icon-default"])};
	--aec-card-color-bg-default: ${getValue(data, ["tokens.css", "body", "card", "color-bg-default"])};
	--aec-card-color-border-default: ${getValue(data, ["tokens.css", "body", "card", "card-color-border-default"])};
	--aec-checkbox-color-bg-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-bg-default"])};
	--aec-checkbox-color-bg-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-bg-hover"])};
	--aec-checkbox-color-bg-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-bg-active"])};
	--aec-checkbox-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-bg-disabled"])};
	--aec-checkbox-color-border-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-border-default"])};
	--aec-checkbox-color-border-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-border-hover"])};
	--aec-checkbox-color-border-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-border-active"])};
	--aec-checkbox-color-border-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-border-disabled"])};
	--aec-checkbox-color-icon-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-icon-default"])};
	--aec-checkbox-color-icon-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-icon-hover"])};
	--aec-checkbox-color-icon-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-icon-active"])};
	--aec-checkbox-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-icon-disabled"])};
	--aec-checkbox-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-bg-default"])};
	--aec-checkbox-color-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-bg-hover"])};
	--aec-checkbox-color-selected-bg-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-bg-active"])};
	--aec-checkbox-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-bg-disabled"])};
	--aec-checkbox-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-border-default"])};
	--aec-checkbox-color-selected-border-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-border-hover"])};
	--aec-checkbox-color-selected-border-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-border-active"])};
	--aec-checkbox-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-border-disabled"])};
	--aec-checkbox-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-icon-default"])};
	--aec-checkbox-color-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-icon-hover"])};
	--aec-checkbox-color-selected-icon-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-icon-active"])};
	--aec-checkbox-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-selected-icon-disabled"])};
	--aec-checkbox-color-intermediate-bg-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-bg-default"])};
	--aec-checkbox-color-intermediate-bg-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-bg-hover"])};
	--aec-checkbox-color-intermediate-bg-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-bg-active"])};
	--aec-checkbox-color-intermediate-bg-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-bg-disabled"])};
	--aec-checkbox-color-intermediate-border-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-border-default"])};
	--aec-checkbox-color-intermediate-border-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-border-hover"])};
	--aec-checkbox-color-intermediate-border-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-border-active"])};
	--aec-checkbox-color-intermediate-border-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-border-disabled"])};
	--aec-checkbox-color-intermediate-icon-default: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-icon-default"])};
	--aec-checkbox-color-intermediate-icon-hover: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-icon-hover"])};
	--aec-checkbox-color-intermediate-icon-active: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-icon-active"])};
	--aec-checkbox-color-intermediate-icon-disabled: ${getValue(data, ["tokens.css", "body", "checkbox", "color-intermediate-icon-disabled"])};
	--aec-chip-selectable-color-bg-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-default"])};
	--aec-chip-selectable-color-bg-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-hover"])};
	--aec-chip-selectable-color-bg-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-active"])};
	--aec-chip-selectable-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-disabled"])};
	--aec-chip-selectable-color-bg-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-selected-default"])};
	--aec-chip-selectable-color-bg-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-bg-selected-disabled"])};
	--aec-chip-selectable-color-border-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-default"])};
	--aec-chip-selectable-color-border-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-hover"])};
	--aec-chip-selectable-color-border-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-active"])};
	--aec-chip-selectable-color-border-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-disabled"])};
	--aec-chip-selectable-color-border-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-selected-default"])};
	--aec-chip-selectable-color-border-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-border-selected-disabled"])};
	--aec-chip-selectable-color-text-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-default"])};
	--aec-chip-selectable-color-text-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-hover"])};
	--aec-chip-selectable-color-text-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-active"])};
	--aec-chip-selectable-color-text-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-disabled"])};
	--aec-chip-selectable-color-text-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-selected-default"])};
	--aec-chip-selectable-color-text-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-text-selected-disabled"])};
	--aec-chip-selectable-color-icon-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-default"])};
	--aec-chip-selectable-color-icon-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-hover"])};
	--aec-chip-selectable-color-icon-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-active"])};
	--aec-chip-selectable-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-disabled"])};
	--aec-chip-selectable-color-icon-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-selected-default"])};
	--aec-chip-selectable-color-icon-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-icon-selected-disabled"])};
	--aec-chip-selectable-color-inverse-bg-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-default"])};
	--aec-chip-selectable-color-inverse-bg-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-hover"])};
	--aec-chip-selectable-color-inverse-bg-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-active"])};
	--aec-chip-selectable-color-inverse-bg-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-disabled"])};
	--aec-chip-selectable-color-inverse-bg-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-selected-default"])};
	--aec-chip-selectable-color-inverse-bg-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-bg-selected-disabled"])};
	--aec-chip-selectable-color-inverse-border-default: ${getValue(data, ["tokens.css", "body", "chip", "chip-selectable-color-inverse-border-default"])};
	--aec-chip-selectable-color-inverse-border-hover: ${getValue(data, ["tokens.css", "body", "chip", "chip-selectable-color-inverse-border-hover"])};
	--aec-chip-selectable-color-inverse-border-active: ${getValue(data, ["tokens.css", "body", "chip", "chip-selectable-color-inverse-border-active"])};
	--aec-chip-selectable-color-inverse-border-disabled: ${getValue(data, ["tokens.css", "body", "chip", "chip-selectable-color-inverse-border-disabled"])};
	--aec-chip-selectable-color-inverse-border-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-border-selected-default"])};
	--aec-chip-selectable-color-inverse-border-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-border-selected-disabled"])};
	--aec-chip-selectable-color-inverse-text-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-default"])};
	--aec-chip-selectable-color-inverse-text-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-hover"])};
	--aec-chip-selectable-color-inverse-text-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-active"])};
	--aec-chip-selectable-color-inverse-text-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-disabled"])};
	--aec-chip-selectable-color-inverse-text-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-selected-default"])};
	--aec-chip-selectable-color-inverse-text-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-text-selected-disabled"])};
	--aec-chip-selectable-color-inverse-icon-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-default"])};
	--aec-chip-selectable-color-inverse-icon-hover: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-hover"])};
	--aec-chip-selectable-color-inverse-icon-active: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-active"])};
	--aec-chip-selectable-color-inverse-icon-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-disabled"])};
	--aec-chip-selectable-color-inverse-icon-selected-default: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-selected-default"])};
	--aec-chip-selectable-color-inverse-icon-selected-disabled: ${getValue(data, ["tokens.css", "body", "chip", "selectable-color-inverse-icon-selected-disabled"])};
	--aec-chip-information-color-primary-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-bg"])};
	--aec-chip-information-color-primary-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-border"])};
	--aec-chip-information-color-primary-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-text"])};
	--aec-chip-information-color-primary-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-icon"])};
	--aec-chip-information-color-primary-subtle-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-subtle-bg$$rgb"])};
	--aec-chip-information-color-primary-subtle-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-subtle-border"])};
	--aec-chip-information-color-primary-subtle-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-subtle-text"])};
	--aec-chip-information-color-primary-subtle-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-primary-subtle-icon"])};
	--aec-chip-information-color-success-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-bg"])};
	--aec-chip-information-color-success-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-border"])};
	--aec-chip-information-color-success-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-text"])};
	--aec-chip-information-color-success-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-icon"])};
	--aec-chip-information-color-success-subtle-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-subtle-bg$$rgb"])};
	--aec-chip-information-color-success-subtle-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-subtle-border"])};
	--aec-chip-information-color-success-subtle-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-subtle-text"])};
	--aec-chip-information-color-success-subtle-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-success-subtle-icon"])};
	--aec-chip-information-color-warning-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-bg"])};
	--aec-chip-information-color-warning-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-border"])};
	--aec-chip-information-color-warning-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-text"])};
	--aec-chip-information-color-warning-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-icon"])};
	--aec-chip-information-color-warning-subtle-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-subtle-bg$$rgb"])};
	--aec-chip-information-color-warning-subtle-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-subtle-border"])};
	--aec-chip-information-color-warning-subtle-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-subtle-text"])};
	--aec-chip-information-color-warning-subtle-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-warning-subtle-icon"])};
	--aec-chip-information-color-error-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-bg"])};
	--aec-chip-information-color-error-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-border"])};
	--aec-chip-information-color-error-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-text"])};
	--aec-chip-information-color-error-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-icon"])};
	--aec-chip-information-color-error-subtle-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-subtle-bg$$rgb"])};
	--aec-chip-information-color-error-subtle-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-subtle-border"])};
	--aec-chip-information-color-error-subtle-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-subtle-text"])};
	--aec-chip-information-color-error-subtle-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-error-subtle-icon"])};
	--aec-chip-information-color-grey-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-bg"])};
	--aec-chip-information-color-grey-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-border"])};
	--aec-chip-information-color-grey-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-text"])};
	--aec-chip-information-color-grey-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-icon"])};
	--aec-chip-information-color-grey-subtle-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-subtle-bg"])};
	--aec-chip-information-color-grey-subtle-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-subtle-border"])};
	--aec-chip-information-color-grey-subtle-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-subtle-text"])};
	--aec-chip-information-color-grey-subtle-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-grey-subtle-icon"])};
	--aec-chip-plain-color-primary-text: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-primary-text"])};
	--aec-chip-plain-color-primary-icon: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-primary-icon"])};
	--aec-chip-plain-color-success-text: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-success-text"])};
	--aec-chip-plain-color-success-icon: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-success-icon"])};
	--aec-chip-plain-color-warning-text: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-warning-text"])};
	--aec-chip-plain-color-warning-icon: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-warning-icon"])};
	--aec-chip-plain-color-error-text: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-error-text"])};
	--aec-chip-plain-color-error-icon: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-error-icon"])};
	--aec-chip-plain-color-grey-text: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-grey-text"])};
	--aec-chip-plain-color-grey-icon: ${getValue(data, ["tokens.css", "body", "chip", "plain-color-grey-icon"])};
	--aec-chip-dismissable-color-bg-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-bg-default"])};
	--aec-chip-dismissable-color-bg-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-bg-hover"])};
	--aec-chip-dismissable-color-bg-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-bg-active"])};
	--aec-chip-dismissable-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-bg-disabled"])};
	--aec-chip-dismissable-color-border-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-border-default"])};
	--aec-chip-dismissable-color-border-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-border-hover"])};
	--aec-chip-dismissable-color-border-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-border-active"])};
	--aec-chip-dismissable-color-border-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-border-disabled"])};
	--aec-chip-dismissable-color-text-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-text-default"])};
	--aec-chip-dismissable-color-text-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-text-hover"])};
	--aec-chip-dismissable-color-text-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-text-active"])};
	--aec-chip-dismissable-color-text-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-text-disabled"])};
	--aec-chip-dismissable-color-icon-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-icon-default"])};
	--aec-chip-dismissable-color-icon-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-icon-hover"])};
	--aec-chip-dismissable-color-icon-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-icon-active"])};
	--aec-chip-dismissable-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-icon-disabled"])};
	--aec-chip-dismissable-color-inverse-bg-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-bg-default"])};
	--aec-chip-dismissable-color-inverse-bg-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-bg-hover"])};
	--aec-chip-dismissable-color-inverse-bg-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-bg-active"])};
	--aec-chip-dismissable-color-inverse-bg-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-bg-disabled"])};
	--aec-chip-dismissable-color-inverse-border-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-border-default"])};
	--aec-chip-dismissable-color-inverse-border-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-border-hover"])};
	--aec-chip-dismissable-color-inverse-border-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-border-active"])};
	--aec-chip-dismissable-color-inverse-border-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-border-disabled"])};
	--aec-chip-dismissable-color-inverse-text-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-text-default"])};
	--aec-chip-dismissable-color-inverse-text-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-text-hover"])};
	--aec-chip-dismissable-color-inverse-text-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-text-active"])};
	--aec-chip-dismissable-color-inverse-text-disabled: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-text-disabled"])};
	--aec-chip-dismissable-color-inverse-icon-default: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-icon-default"])};
	--aec-chip-dismissable-color-inverse-icon-hover: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-icon-hover"])};
	--aec-chip-dismissable-color-inverse-icon-active: ${getValue(data, ["tokens.css", "body", "chip", "dismissable-color-inverse-icon-active"])};
	--aec-chip-dismissable-color-inverse-icon-disabled: ${getValue(data, ["tokens.css", "body", "chip", "chip-dismissable-color-inverse-icon-disabled"])};
	--aec-chip-information-color-secondary-bg: ${getValue(data, ["tokens.css", "body", "chip", "information-color-secondary-bg"])};
	--aec-chip-information-color-secondary-border: ${getValue(data, ["tokens.css", "body", "chip", "information-color-secondary-border"])};
	--aec-chip-information-color-secondary-text: ${getValue(data, ["tokens.css", "body", "chip", "information-color-secondary-text"])};
	--aec-chip-information-color-secondary-icon: ${getValue(data, ["tokens.css", "body", "chip", "information-color-secondary-icon"])};
	--aec-dialog-color-bg: ${getValue(data, ["tokens.css", "body", "dialog", "color-bg"])};
	--aec-dialog-color-border: ${getValue(data, ["tokens.css", "body", "dialog", "color-border"])};
	--aec-dialog-box-shadow: ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-1", "color"])},
	${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-2", "x"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-2", "y"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-2", "blur"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-2", "spread"])}px ${getValue(data, ["tokens.css", "body", "dialog", "box-shadow-2", "color"])};
	--aec-dialog-icon-default: ${getValue(data, ["tokens.css", "body", "dialog", "icon-default"])};
	--aec-dialog-icon-hover: ${getValue(data, ["tokens.css", "body", "dialog", "icon-hover"])};
	--aec-dialog-icon-active: ${getValue(data, ["tokens.css", "body", "dialog", "icon-active"])};
	--aec-dialog-icon-disabled: ${getValue(data, ["tokens.css", "body", "dialog", "icon-disabled"])};
	--aec-divider-color-border: ${getValue(data, ["tokens.css", "body", "divider", "color-border"])};
	--aec-divider-width: ${getValue(data, ["tokens.css", "body", "divider", "divider-width"])}px;
	--aec-drawer-color-bg: ${getValue(data, ["tokens.css", "body", "drawer", "color-bg"])};
	--aec-drawer-color-border: ${getValue(data, ["tokens.css", "body", "drawer", "drawer-color-border"])};
	--aec-drawer-icon-default: ${getValue(data, ["tokens.css", "body", "drawer", "icon-default"])};
	--aec-drawer-icon-hover: ${getValue(data, ["tokens.css", "body", "drawer", "icon-hover"])};
	--aec-drawer-icon-active: ${getValue(data, ["tokens.css", "body", "drawer", "icon-active"])};
	--aec-drawer-icon-disabled: ${getValue(data, ["tokens.css", "body", "drawer", "icon-disabled"])};
	--aec-form-control-color-text-default: ${getValue(data, ["tokens.css", "body", "form-control", "color-text-default"])};
	--aec-form-control-color-text-disabled: ${getValue(data, ["tokens.css", "body", "form-control", "color-text-disabled"])};
	--aec-media-query-breakpoint-s: ${getValue(data, ["tokens.css", "body", "media-query", "breakpoint-s"])};
	--aec-media-query-breakpoint-m: ${getValue(data, ["tokens.css", "body", "media-query", "breakpoint-m"])};
	--aec-media-query-breakpoint-l: ${getValue(data, ["tokens.css", "body", "media-query", "breakpoint-l"])};
	--aec-media-query-breakpoint-xl: ${getValue(data, ["tokens.css", "body", "media-query", "breakpoint-xl"])};
	--aec-media-query-breakpoint-2xl: ${getValue(data, ["tokens.css", "body", "media-query", "breakpoint-2xl"])};
	--aec-media-query-columns-s: ${getValue(data, ["tokens.css", "body", "media-query", "columns-s"])};
	--aec-media-query-columns-m: ${getValue(data, ["tokens.css", "body", "media-query", "columns-m"])};
	--aec-media-query-columns-l: ${getValue(data, ["tokens.css", "body", "media-query", "columns-l"])};
	--aec-media-query-page-inset-none: ${getValue(data, ["tokens.css", "body", "media-query", "page-inset-none"])}px;
	--aec-media-query-page-inset-s: ${getValue(data, ["tokens.css", "body", "media-query", "page-inset-s"])}px;
	--aec-media-query-page-inset-m: ${getValue(data, ["tokens.css", "body", "media-query", "page-inset-m"])}px;
	--aec-media-query-page-inset-l: ${getValue(data, ["tokens.css", "body", "media-query", "page-inset-l"])}px;
	--aec-media-query-page-inset-xl: ${getValue(data, ["tokens.css", "body", "media-query", "page-inset-xl"])}px;
	--aec-media-query-page-inside-none: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-none"])}px;
	--aec-media-query-page-inside-xxs: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-xxs"])}px;
	--aec-media-query-page-inside-xs: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-xs"])}px;
	--aec-media-query-page-inside-s: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-s"])}px;
	--aec-media-query-page-inside-m: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-m"])}px;
	--aec-media-query-page-inside-l: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-l"])}px;
	--aec-media-query-page-inside-xl: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-xl"])}px;
	--aec-media-query-page-inside-xxl: ${getValue(data, ["tokens.css", "body", "media-query", "page-inside-xxl"])}px;
	--aec-input-standard-outlined-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-bg-default"])};
	--aec-input-standard-outlined-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-bg-hover"])};
	--aec-input-standard-outlined-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-bg-active"])};
	--aec-input-standard-outlined-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-bg-disabled"])};
	--aec-input-standard-outlined-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-border-default"])};
	--aec-input-standard-outlined-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-border-hover"])};
	--aec-input-standard-outlined-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-border-active"])};
	--aec-input-standard-outlined-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-border-disabled"])};
	--aec-input-standard-outlined-color-text-prompt: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-text-prompt"])};
	--aec-input-standard-outlined-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-text-default"])};
	--aec-input-standard-outlined-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-text-hover"])};
	--aec-input-standard-outlined-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-text-active"])};
	--aec-input-standard-outlined-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-text-disabled"])};
	--aec-input-standard-outlined-color-label-prompt: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-label-prompt"])};
	--aec-input-standard-outlined-color-label-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-label-default"])};
	--aec-input-standard-outlined-color-label-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-label-hover"])};
	--aec-input-standard-outlined-color-label-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-label-active"])};
	--aec-input-standard-outlined-color-label-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-label-disabled"])};
	--aec-input-standard-outlined-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-icon-default"])};
	--aec-input-standard-outlined-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-icon-hover"])};
	--aec-input-standard-outlined-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-icon-active"])};
	--aec-input-standard-outlined-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-icon-disabled"])};
	--aec-input-standard-outlined-color-error-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-error-bg-default"])};
	--aec-input-standard-outlined-color-error-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-error-border-default"])};
	--aec-input-standard-outlined-color-error-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-error-text-default"])};
	--aec-input-standard-outlined-color-error-label-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-error-label-default"])};
	--aec-input-standard-outlined-color-error-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-color-error-icon-default"])};
	--aec-input-standard-outlined-prefix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-bg-default"])};
	--aec-input-standard-outlined-prefix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-bg-hover"])};
	--aec-input-standard-outlined-prefix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-bg-active"])};
	--aec-input-standard-outlined-prefix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-bg-disabled"])};
	--aec-input-standard-outlined-prefix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-border-default"])};
	--aec-input-standard-outlined-prefix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-border-hover"])};
	--aec-input-standard-outlined-prefix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-border-active"])};
	--aec-input-standard-outlined-prefix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-border-disabled"])};
	--aec-input-standard-outlined-prefix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-text-default"])};
	--aec-input-standard-outlined-prefix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-text-hover"])};
	--aec-input-standard-outlined-prefix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-text-active"])};
	--aec-input-standard-outlined-prefix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-text-disabled"])};
	--aec-input-standard-outlined-prefix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-icon-default"])};
	--aec-input-standard-outlined-prefix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-icon-hover"])};
	--aec-input-standard-outlined-prefix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-icon-active"])};
	--aec-input-standard-outlined-prefix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-icon-disabled"])};
	--aec-input-standard-outlined-prefix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-divider-default"])};
	--aec-input-standard-outlined-prefix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-divider-hover"])};
	--aec-input-standard-outlined-prefix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-divider-active"])};
	--aec-input-standard-outlined-prefix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-prefix-color-divider-disabled"])};
	--aec-input-standard-outlined-suffix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-bg-default"])};
	--aec-input-standard-outlined-suffix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-bg-hover"])};
	--aec-input-standard-outlined-suffix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-bg-active"])};
	--aec-input-standard-outlined-suffix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-bg-disabled"])};
	--aec-input-standard-outlined-suffix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-border-default"])};
	--aec-input-standard-outlined-suffix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-border-hover"])};
	--aec-input-standard-outlined-suffix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-border-active"])};
	--aec-input-standard-outlined-suffix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-border-disabled"])};
	--aec-input-standard-outlined-suffix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-text-default"])};
	--aec-input-standard-outlined-suffix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-text-hover"])};
	--aec-input-standard-outlined-suffix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-text-active"])};
	--aec-input-standard-outlined-suffix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-text-disabled"])};
	--aec-input-standard-outlined-suffix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-icon-default"])};
	--aec-input-standard-outlined-suffix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-icon-hover"])};
	--aec-input-standard-outlined-suffix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-icon-active"])};
	--aec-input-standard-outlined-suffix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-icon-disabled"])};
	--aec-input-standard-outlined-suffix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-divider-default"])};
	--aec-input-standard-outlined-suffix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-divider-hover"])};
	--aec-input-standard-outlined-suffix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-divider-active"])};
	--aec-input-standard-outlined-suffix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-outlined-suffix-color-divider-disabled"])};
	--aec-input-standard-filled-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-bg-default"])};
	--aec-input-standard-filled-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-bg-hover"])};
	--aec-input-standard-filled-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-bg-active"])};
	--aec-input-standard-filled-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-bg-disabled"])};
	--aec-input-standard-filled-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-border-default"])};
	--aec-input-standard-filled-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-border-hover"])};
	--aec-input-standard-filled-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-border-active"])};
	--aec-input-standard-filled-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-border-disabled"])};
	--aec-input-standard-filled-color-text-prompt: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-text-prompt"])};
	--aec-input-standard-filled-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-text-default"])};
	--aec-input-standard-filled-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-text-hover"])};
	--aec-input-standard-filled-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-text-active"])};
	--aec-input-standard-filled-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-text-disabled"])};
	--aec-input-standard-filled-color-label-prompt: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-label-prompt"])};
	--aec-input-standard-filled-color-label-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-label-default"])};
	--aec-input-standard-filled-color-label-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-label-hover"])};
	--aec-input-standard-filled-color-label-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-label-active"])};
	--aec-input-standard-filled-color-label-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-label-disabled"])};
	--aec-input-standard-filled-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-icon-default"])};
	--aec-input-standard-filled-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-icon-hover"])};
	--aec-input-standard-filled-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-icon-active"])};
	--aec-input-standard-filled-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-icon-disabled"])};
	--aec-input-standard-filled-color-error-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-error-bg-default"])};
	--aec-input-standard-filled-color-error-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-error-border-default"])};
	--aec-input-standard-filled-color-error-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-error-text-default"])};
	--aec-input-standard-filled-color-error-label-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-error-label-default"])};
	--aec-input-standard-filled-color-error-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-color-error-icon-default"])};
	--aec-input-standard-filled-prefix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-bg-default"])};
	--aec-input-standard-filled-prefix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-bg-hover"])};
	--aec-input-standard-filled-prefix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-bg-active"])};
	--aec-input-standard-filled-prefix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-bg-disabled"])};
	--aec-input-standard-filled-prefix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-border-default"])};
	--aec-input-standard-filled-prefix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-border-hover"])};
	--aec-input-standard-filled-prefix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-border-active"])};
	--aec-input-standard-filled-prefix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-border-disabled"])};
	--aec-input-standard-filled-prefix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-text-default"])};
	--aec-input-standard-filled-prefix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-text-hover"])};
	--aec-input-standard-filled-prefix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-text-active"])};
	--aec-input-standard-filled-prefix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-text-disabled"])};
	--aec-input-standard-filled-prefix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-icon-default"])};
	--aec-input-standard-filled-prefix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-icon-hover"])};
	--aec-input-standard-filled-prefix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-icon-active"])};
	--aec-input-standard-filled-prefix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-icon-disabled"])};
	--aec-input-standard-filled-prefix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-divider-default"])};
	--aec-input-standard-filled-prefix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-divider-hover"])};
	--aec-input-standard-filled-prefix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-divider-active"])};
	--aec-input-standard-filled-prefix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-prefix-color-divider-disabled"])};
	--aec-input-standard-filled-suffix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-bg-default"])};
	--aec-input-standard-filled-suffix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-bg-hover"])};
	--aec-input-standard-filled-suffix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-bg-active"])};
	--aec-input-standard-filled-suffix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-bg-disabled"])};
	--aec-input-standard-filled-suffix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-border-default"])};
	--aec-input-standard-filled-suffix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-border-hover"])};
	--aec-input-standard-filled-suffix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-border-active"])};
	--aec-input-standard-filled-suffix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-border-disabled"])};
	--aec-input-standard-filled-suffix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-text-default"])};
	--aec-input-standard-filled-suffix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-text-hover"])};
	--aec-input-standard-filled-suffix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-text-active"])};
	--aec-input-standard-filled-suffix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-text-disabled"])};
	--aec-input-standard-filled-suffix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-icon-default"])};
	--aec-input-standard-filled-suffix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-icon-hover"])};
	--aec-input-standard-filled-suffix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-icon-active"])};
	--aec-input-standard-filled-suffix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-icon-disabled"])};
	--aec-input-standard-filled-suffix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-divider-default"])};
	--aec-input-standard-filled-suffix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-divider-hover"])};
	--aec-input-standard-filled-suffix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-divider-active"])};
	--aec-input-standard-filled-suffix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "standard-filled-suffix-color-divider-disabled"])};
	--aec-input-material-outlined-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-bg-default"])};
	--aec-input-material-outlined-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-bg-hover"])};
	--aec-input-material-outlined-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-bg-active"])};
	--aec-input-material-outlined-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-bg-disabled"])};
	--aec-input-material-outlined-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-border-default"])};
	--aec-input-material-outlined-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-border-hover"])};
	--aec-input-material-outlined-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-border-active"])};
	--aec-input-material-outlined-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-border-disabled"])};
	--aec-input-material-outlined-color-text-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-text-prompt"])};
	--aec-input-material-outlined-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-text-default"])};
	--aec-input-material-outlined-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-text-hover"])};
	--aec-input-material-outlined-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-text-active"])};
	--aec-input-material-outlined-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-text-disabled"])};
	--aec-input-material-outlined-color-label-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-label-prompt"])};
	--aec-input-material-outlined-color-label-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-label-default"])};
	--aec-input-material-outlined-color-label-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-label-hover"])};
	--aec-input-material-outlined-color-label-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-label-active"])};
	--aec-input-material-outlined-color-label-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-label-disabled"])};
	--aec-input-material-outlined-color-icon-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-icon-prompt"])};
	--aec-input-material-outlined-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-icon-default"])};
	--aec-input-material-outlined-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-icon-hover"])};
	--aec-input-material-outlined-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-icon-active"])};
	--aec-input-material-outlined-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-icon-disabled"])};
	--aec-input-material-outlined-color-error-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-error-bg-default"])};
	--aec-input-material-outlined-color-error-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-error-border-default"])};
	--aec-input-material-outlined-color-error-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-error-text-default"])};
	--aec-input-material-outlined-color-error-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-color-error-icon-default"])};
	--aec-input-material-outlined-prefix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-bg-default"])};
	--aec-input-material-outlined-prefix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-bg-hover"])};
	--aec-input-material-outlined-prefix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-bg-active"])};
	--aec-input-material-outlined-prefix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-bg-disabled"])};
	--aec-input-material-outlined-prefix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-border-default"])};
	--aec-input-material-outlined-prefix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-border-hover"])};
	--aec-input-material-outlined-prefix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-border-active"])};
	--aec-input-material-outlined-prefix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-border-disabled"])};
	--aec-input-material-outlined-prefix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-text-default"])};
	--aec-input-material-outlined-prefix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-text-hover"])};
	--aec-input-material-outlined-prefix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-text-active"])};
	--aec-input-material-outlined-prefix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-text-disabled"])};
	--aec-input-material-outlined-prefix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-icon-default"])};
	--aec-input-material-outlined-prefix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-icon-hover"])};
	--aec-input-material-outlined-prefix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-icon-active"])};
	--aec-input-material-outlined-prefix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-icon-disabled"])};
	--aec-input-material-outlined-prefix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-divider-default"])};
	--aec-input-material-outlined-prefix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-divider-hover"])};
	--aec-input-material-outlined-prefix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-divider-active"])};
	--aec-input-material-outlined-prefix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-prefix-color-divider-disabled"])};
	--aec-input-material-outlined-suffix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-bg-default"])};
	--aec-input-material-outlined-suffix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-bg-hover"])};
	--aec-input-material-outlined-suffix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-bg-active"])};
	--aec-input-material-outlined-suffix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-bg-disabled"])}d9;
	--aec-input-material-outlined-suffix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-border-default"])};
	--aec-input-material-outlined-suffix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-border-hover"])};
	--aec-input-material-outlined-suffix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-border-active"])};
	--aec-input-material-outlined-suffix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-border-disabled"])};
	--aec-input-material-outlined-suffix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-text-default"])};
	--aec-input-material-outlined-suffix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-text-hover"])};
	--aec-input-material-outlined-suffix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-text-active"])};
	--aec-input-material-outlined-suffix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-text-disabled"])};
	--aec-input-material-outlined-suffix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-icon-default"])};
	--aec-input-material-outlined-suffix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-icon-hover"])};
	--aec-input-material-outlined-suffix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-icon-active"])};
	--aec-input-material-outlined-suffix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-icon-disabled"])};
	--aec-input-material-outlined-suffix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-divider-default"])};
	--aec-input-material-outlined-suffix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-divider-hover"])};
	--aec-input-material-outlined-suffix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-divider-active"])};
	--aec-input-material-outlined-suffix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-outlined-suffix-color-divider-disabled"])};
	--aec-input-material-filled-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-bg-default$$rgb"])};
	--aec-input-material-filled-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-bg-hover$$rgb"])};
	--aec-input-material-filled-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-bg-active$$rgb"])};
	--aec-input-material-filled-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-bg-disabled"])};
	--aec-input-material-filled-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-border-default"])};
	--aec-input-material-filled-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-border-hover"])};
	--aec-input-material-filled-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-border-active"])};
	--aec-input-material-filled-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-border-disabled"])};
	--aec-input-material-filled-color-text-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-text-prompt"])};
	--aec-input-material-filled-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-text-default"])};
	--aec-input-material-filled-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-text-hover"])};
	--aec-input-material-filled-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-text-active"])};
	--aec-input-material-filled-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-text-disabled"])};
	--aec-input-material-filled-color-label-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-label-prompt"])};
	--aec-input-material-filled-color-label-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-label-default"])};
	--aec-input-material-filled-color-label-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-label-hover"])};
	--aec-input-material-filled-color-label-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-label-active"])};
	--aec-input-material-filled-color-label-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-label-disabled"])};
	--aec-input-material-filled-color-icon-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-icon-prompt"])};
	--aec-input-material-filled-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-icon-default"])};
	--aec-input-material-filled-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-icon-hover"])};
	--aec-input-material-filled-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-icon-active"])};
	--aec-input-material-filled-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-icon-disabled"])};
	--aec-input-material-filled-color-error-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-error-bg-default$$rgb"])};
	--aec-input-material-filled-color-error-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-error-border-default"])};
	--aec-input-material-filled-color-error-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-error-text-default"])};
	--aec-input-material-filled-color-error-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-color-error-icon-default"])};
	--aec-input-material-filled-prefix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-bg-default"])};
	--aec-input-material-filled-prefix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-bg-hover"])};
	--aec-input-material-filled-prefix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-bg-active"])};
	--aec-input-material-filled-prefix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-bg-disabled"])};
	--aec-input-material-filled-prefix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-border-default"])};
	--aec-input-material-filled-prefix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-border-hover"])};
	--aec-input-material-filled-prefix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-border-active"])};
	--aec-input-material-filled-prefix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-border-disabled"])};
	--aec-input-material-filled-prefix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-text-default"])};
	--aec-input-material-filled-prefix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-text-hover"])};
	--aec-input-material-filled-prefix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-text-active"])};
	--aec-input-material-filled-prefix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-text-disabled"])};
	--aec-input-material-filled-prefix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-icon-default"])};
	--aec-input-material-filled-prefix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-icon-hover"])};
	--aec-input-material-filled-prefix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-icon-active"])};
	--aec-input-material-filled-prefix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-icon-disabled"])};
	--aec-input-material-filled-prefix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-divider-default"])};
	--aec-input-material-filled-prefix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-divider-hover"])};
	--aec-input-material-filled-prefix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-divider-active"])};
	--aec-input-material-filled-prefix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-prefix-color-divider-disabled"])};
	--aec-input-material-filled-suffix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-bg-default"])};
	--aec-input-material-filled-suffix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-bg-hover"])};
	--aec-input-material-filled-suffix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-bg-active"])};
	--aec-input-material-filled-suffix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-bg-disabled"])};
	--aec-input-material-filled-suffix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-border-default"])};
	--aec-input-material-filled-suffix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-border-hover"])};
	--aec-input-material-filled-suffix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-border-active"])};
	--aec-input-material-filled-suffix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-border-disabled"])};
	--aec-input-material-filled-suffix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-text-default"])};
	--aec-input-material-filled-suffix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-text-hover"])};
	--aec-input-material-filled-suffix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-text-active"])};
	--aec-input-material-filled-suffix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-text-disabled"])};
	--aec-input-material-filled-suffix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-icon-default"])};
	--aec-input-material-filled-suffix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-icon-hover"])};
	--aec-input-material-filled-suffix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-icon-active"])};
	--aec-input-material-filled-suffix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-icon-disabled"])};
	--aec-input-material-filled-suffix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-divider-default"])};
	--aec-input-material-filled-suffix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-divider-hover"])};
	--aec-input-material-filled-suffix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-divider-active"])};
	--aec-input-material-filled-suffix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-filled-suffix-color-divider-disabled"])};
	--aec-input-material-plain-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-bg-default$$rgb"])};
	--aec-input-material-plain-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-bg-hover$$rgb"])};
	--aec-input-material-plain-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-bg-active$$rgb"])};
	--aec-input-material-plain-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-bg-disabled"])};
	--aec-input-material-plain-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-border-default"])};
	--aec-input-material-plain-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-border-hover"])};
	--aec-input-material-plain-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-border-active"])};
	--aec-input-material-plain-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-border-disabled"])};
	--aec-input-material-plain-color-text-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-text-prompt"])};
	--aec-input-material-plain-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-text-default"])};
	--aec-input-material-plain-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-text-hover"])};
	--aec-input-material-plain-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-text-active"])};
	--aec-input-material-plain-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-text-disabled"])};
	--aec-input-material-plain-color-label-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-label-prompt"])};
	--aec-input-material-plain-color-label-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-label-default"])};
	--aec-input-material-plain-color-label-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-label-hover"])};
	--aec-input-material-plain-color-label-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-label-active"])};
	--aec-input-material-plain-color-label-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-label-disabled"])};
	--aec-input-material-plain-color-icon-prompt: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-icon-prompt"])};
	--aec-input-material-plain-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-icon-default"])};
	--aec-input-material-plain-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-icon-hover"])};
	--aec-input-material-plain-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-icon-active"])};
	--aec-input-material-plain-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-icon-disabled"])};
	--aec-input-material-plain-color-error-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-error-bg-default$$rgb"])};
	--aec-input-material-plain-color-error-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-error-border-default"])};
	--aec-input-material-plain-color-error-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-error-text-default"])};
	--aec-input-material-plain-color-error-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-color-error-icon-default"])};
	--aec-input-material-plain-prefix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-bg-default"])};
	--aec-input-material-plain-prefix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-bg-hover"])};
	--aec-input-material-plain-prefix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-bg-active"])};
	--aec-input-material-plain-prefix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-bg-disabled"])};
	--aec-input-material-plain-prefix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-border-default"])};
	--aec-input-material-plain-prefix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-border-hover"])};
	--aec-input-material-plain-prefix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-border-active"])};
	--aec-input-material-plain-prefix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-border-disabled"])};
	--aec-input-material-plain-prefix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-text-default"])};
	--aec-input-material-plain-prefix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-text-hover"])};
	--aec-input-material-plain-prefix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-text-active"])};
	--aec-input-material-plain-prefix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-text-disabled"])};
	--aec-input-material-plain-prefix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-icon-default"])};
	--aec-input-material-plain-prefix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-icon-hover"])};
	--aec-input-material-plain-prefix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-icon-active"])};
	--aec-input-material-plain-prefix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-icon-disabled"])};
	--aec-input-material-plain-prefix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-divider-default"])};
	--aec-input-material-plain-prefix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-divider-hover"])};
	--aec-input-material-plain-prefix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-divider-active"])};
	--aec-input-material-plain-prefix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-prefix-color-divider-disabled"])};
	--aec-input-material-plain-suffix-color-bg-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-bg-default"])};
	--aec-input-material-plain-suffix-color-bg-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-bg-hover"])};
	--aec-input-material-plain-suffix-color-bg-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-bg-active"])};
	--aec-input-material-plain-suffix-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-border-disabled"])};
	--aec-input-material-plain-suffix-color-border-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-border-default"])};
	--aec-input-material-plain-suffix-color-border-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-border-hover"])};
	--aec-input-material-plain-suffix-color-border-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-border-active"])};
	--aec-input-material-plain-suffix-color-border-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-border-disabled"])};
	--aec-input-material-plain-suffix-color-text-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-text-default"])};
	--aec-input-material-plain-suffix-color-text-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-text-hover"])};
	--aec-input-material-plain-suffix-color-text-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-text-active"])};
	--aec-input-material-plain-suffix-color-text-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-text-disabled"])};
	--aec-input-material-plain-suffix-color-icon-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-icon-default"])};
	--aec-input-material-plain-suffix-color-icon-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-icon-hover"])};
	--aec-input-material-plain-suffix-color-icon-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-icon-active"])};
	--aec-input-material-plain-suffix-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-icon-disabled"])};
	--aec-input-material-plain-suffix-color-divider-default: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-divider-default"])};
	--aec-input-material-plain-suffix-color-divider-hover: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-divider-hover"])};
	--aec-input-material-plain-suffix-color-divider-active: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-divider-active"])};
	--aec-input-material-plain-suffix-color-divider-disabled: ${getValue(data, ["tokens.css", "body", "input", "material-plain-suffix-color-divider-disabled"])};
	--aec-link-color-primary-bg-default: ${getValue(data, ["tokens.css", "body", "link", "color-primary-bg-default"])};
	--aec-link-color-primary-bg-hover: ${getValue(data, ["tokens.css", "body", "link", "color-primary-bg-hover"])};
	--aec-link-color-primary-bg-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-primary-bg-disabled"])};
	--aec-link-color-primary-border-default: ${getValue(data, ["tokens.css", "body", "link", "color-primary-border-default"])};
	--aec-link-color-primary-border-hover: ${getValue(data, ["tokens.css", "body", "link", "color-primary-border-hover"])};
	--aec-link-color-primary-border-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-primary-border-disabled"])};
	--aec-link-color-primary-text-default: ${getValue(data, ["tokens.css", "body", "link", "color-primary-text-default"])};
	--aec-link-color-primary-text-hover: ${getValue(data, ["tokens.css", "body", "link", "color-primary-text-hover"])};
	--aec-link-color-primary-text-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-primary-text-disabled"])};
	--aec-link-color-primary-icon-default: ${getValue(data, ["tokens.css", "body", "link", "color-primary-icon-default"])};
	--aec-link-color-primary-icon-hover: ${getValue(data, ["tokens.css", "body", "link", "color-primary-icon-hover"])};
	--aec-link-color-primary-icon-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-primary-icon-disabled"])};
	--aec-link-color-inverse-bg-default: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-bg-default"])};
	--aec-link-color-inverse-bg-hover: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-bg-hover"])};
	--aec-link-color-inverse-bg-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-bg-disabled"])};
	--aec-link-color-inverse-border-default: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-border-default"])};
	--aec-link-color-inverse-border-hover: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-border-hover"])};
	--aec-link-color-inverse-border-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-border-disabled"])};
	--aec-link-color-inverse-text-default: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-text-default"])};
	--aec-link-color-inverse-text-hover: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-text-hover"])};
	--aec-link-color-inverse-text-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-text-disabled"])};
	--aec-link-color-inverse-icon-default: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-icon-default"])};
	--aec-link-color-inverse-icon-hover: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-icon-hover"])};
	--aec-link-color-inverse-icon-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-inverse-icon-disabled"])};
	--aec-link-color-neutral-bg-default: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-bg-default"])};
	--aec-link-color-neutral-bg-hover: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-bg-hover"])};
	--aec-link-color-neutral-bg-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-bg-disabled"])};
	--aec-link-color-neutral-border-default: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-border-default"])};
	--aec-link-color-neutral-border-hover: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-border-hover"])};
	--aec-link-color-neutral-border-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-border-disabled"])};
	--aec-link-color-neutral-text-default: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-text-default"])};
	--aec-link-color-neutral-text-hover: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-text-hover"])};
	--aec-link-color-neutral-text-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-text-disabled"])};
	--aec-link-color-neutral-icon-default: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-icon-default"])};
	--aec-link-color-neutral-icon-hover: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-icon-hover"])};
	--aec-link-color-neutral-icon-disabled: ${getValue(data, ["tokens.css", "body", "link", "color-neutral-icon-disabled"])};
	--aec-list-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "list-item", "color-bg-default"])};
	--aec-list-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "list-item", "color-bg-hover"])};
	--aec-list-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "list-item", "color-bg-active"])};
	--aec-list-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "list-item", "color-bg-disabled"])};
	--aec-list-item-color-bg-selected: ${getValue(data, ["tokens.css", "body", "list-item", "color-bg-selected"])};
	--aec-list-item-color-text-default: ${getValue(data, ["tokens.css", "body", "list-item", "color-text-default"])};
	--aec-list-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "list-item", "color-text-hover"])};
	--aec-list-item-color-text-active: ${getValue(data, ["tokens.css", "body", "list-item", "color-text-active"])};
	--aec-list-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "list-item", "color-text-disabled"])};
	--aec-list-item-color-text-selected: ${getValue(data, ["tokens.css", "body", "list-item", "color-text-selected"])};
	--aec-list-item-color-description-default: ${getValue(data, ["tokens.css", "body", "list-item", "color-description-default"])};
	--aec-list-item-color-description-hover: ${getValue(data, ["tokens.css", "body", "list-item", "color-description-hover"])};
	--aec-list-item-color-description-active: ${getValue(data, ["tokens.css", "body", "list-item", "color-description-active"])};
	--aec-list-item-color-description-disabled: ${getValue(data, ["tokens.css", "body", "list-item", "color-description-disabled"])};
	--aec-list-item-color-description-selected: ${getValue(data, ["tokens.css", "body", "list-item", "color-description-selected"])};
	--aec-list-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "list-item", "color-icon-default"])};
	--aec-list-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "list-item", "color-icon-hover"])};
	--aec-list-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "list-item", "color-icon-active"])};
	--aec-list-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "list-item", "color-icon-disabled"])};
	--aec-list-item-color-icon-selected: ${getValue(data, ["tokens.css", "body", "list-item", "color-icon-selected"])};
	--aec-notification-color-success-bg: ${getValue(data, ["tokens.css", "body", "notification", "color-success-bg"])};
	--aec-notification-color-success-border: ${getValue(data, ["tokens.css", "body", "notification", "color-success-border"])};
	--aec-notification-color-success-title: ${getValue(data, ["tokens.css", "body", "notification", "color-success-title"])};
	--aec-notification-color-success-description: ${getValue(data, ["tokens.css", "body", "notification", "color-success-description"])};
	--aec-notification-color-success-icon: ${getValue(data, ["tokens.css", "body", "notification", "color-success-icon"])};
	--aec-notification-color-error-bg: ${getValue(data, ["tokens.css", "body", "notification", "color-error-bg"])};
	--aec-notification-color-error-border: ${getValue(data, ["tokens.css", "body", "notification", "color-error-border"])};
	--aec-notification-color-error-title: ${getValue(data, ["tokens.css", "body", "notification", "color-error-title"])};
	--aec-notification-color-error-description: ${getValue(data, ["tokens.css", "body", "notification", "color-error-description"])};
	--aec-notification-color-error-icon: ${getValue(data, ["tokens.css", "body", "notification", "color-error-icon"])};
	--aec-notification-color-warning-bg: ${getValue(data, ["tokens.css", "body", "notification", "color-warning-bg"])};
	--aec-notification-color-warning-border: ${getValue(data, ["tokens.css", "body", "notification", "color-warning-border"])};
	--aec-notification-color-warning-title: ${getValue(data, ["tokens.css", "body", "notification", "color-warning-title"])};
	--aec-notification-color-warning-description: ${getValue(data, ["tokens.css", "body", "notification", "color-warning-description"])};
	--aec-notification-color-warning-icon: ${getValue(data, ["tokens.css", "body", "notification", "color-warning-icon"])};
	--aec-notification-color-information-bg: ${getValue(data, ["tokens.css", "body", "notification", "color-information-bg"])};
	--aec-notification-color-information-border: ${getValue(data, ["tokens.css", "body", "notification", "color-information-border"])};
	--aec-notification-color-information-title: ${getValue(data, ["tokens.css", "body", "notification", "color-information-title"])};
	--aec-notification-color-information-description: ${getValue(data, ["tokens.css", "body", "notification", "color-information-description"])};
	--aec-notification-color-information-icon: ${getValue(data, ["tokens.css", "body", "notification", "color-information-icon"])};
	--aec-notification-container-inside-spacing: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-spacing"])}px;
	--aec-notification-container-inside-item-spacing: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-item-spacing"])}px;
	--aec-notification-container-inside-border-radius: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-border-radius"])}px;
	--aec-notification-container-inside-box-shadow: ${getValue(data, ["tokens.css", "body", "notification", "container-inside", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-inside", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-inside", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-inside", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-inside", "box-shadow-1", "color"])};
	--aec-notification-container-inside-border-width-left: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-border-width-left"])}px;
	--aec-notification-container-inside-border-width-top: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-border-width-top"])}px;
	--aec-notification-container-inside-border-width-right: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-border-width-right"])}px;
	--aec-notification-container-inside-border-width-bottom: ${getValue(data, ["tokens.css", "body", "notification", "container-inside-border-width-bottom"])}px;
	--aec-notification-container-bg-border-radius: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-border-radius"])}px;
	--aec-notification-container-bg-box-shadow: ${getValue(data, ["tokens.css", "body", "notification", "container-bg", "box-shadow-1", "x"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-bg", "box-shadow-1", "y"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-bg", "box-shadow-1", "blur"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-bg", "box-shadow-1", "spread"])}px ${getValue(data, ["tokens.css", "body", "notification", "container-bg", "box-shadow-1", "color"])};
	--aec-notification-container-bg-border-width-left: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-border-width-left"])}px;
	--aec-notification-container-bg-border-width-top: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-border-width-top"])}px;
	--aec-notification-container-bg-border-width-right: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-border-width-right"])}px;
	--aec-notification-container-bg-border-width-bottom: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-border-width-bottom"])}px;
	--aec-notification-container-bg-spacing: ${getValue(data, ["tokens.css", "body", "notification", "container-bg-spacing"])}px;
	--aec-notification-container-text-item-spacing: ${getValue(data, ["tokens.css", "body", "notification", "container-text-item-spacing"])}px;
	--aec-radio-color-bg-default: ${getValue(data, ["tokens.css", "body", "radio", "color-bg-default"])};
	--aec-radio-color-bg-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-bg-hover"])};
	--aec-radio-color-bg-active: ${getValue(data, ["tokens.css", "body", "radio", "color-bg-active"])};
	--aec-radio-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-bg-disabled"])};
	--aec-radio-color-border-default: ${getValue(data, ["tokens.css", "body", "radio", "color-border-default"])};
	--aec-radio-color-border-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-border-hover"])};
	--aec-radio-color-border-active: ${getValue(data, ["tokens.css", "body", "radio", "color-border-active"])};
	--aec-radio-color-border-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-border-disabled"])};
	--aec-radio-color-icon-default: ${getValue(data, ["tokens.css", "body", "radio", "color-icon-default"])};
	--aec-radio-color-icon-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-icon-hover"])};
	--aec-radio-color-icon-active: ${getValue(data, ["tokens.css", "body", "radio", "color-icon-active"])};
	--aec-radio-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-icon-disabled"])};
	--aec-radio-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-bg-default"])};
	--aec-radio-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-bg-disabled"])};
	--aec-radio-color-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-bg-hover"])};
	--aec-radio-color-selected-bg-active: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-bg-active"])};
	--aec-radio-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-border-default"])};
	--aec-radio-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-border-disabled"])};
	--aec-radio-color-selected-border-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-border-hover"])};
	--aec-radio-color-selected-border-active: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-border-active"])};
	--aec-radio-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-icon-default"])};
	--aec-radio-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-icon-disabled"])};
	--aec-radio-color-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-icon-hover"])};
	--aec-radio-color-selected-icon-active: ${getValue(data, ["tokens.css", "body", "radio", "color-selected-icon-active"])};
	--aec-radio-color-intermediate-bg-default: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-bg-default"])};
	--aec-radio-color-intermediate-bg-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-bg-hover"])};
	--aec-radio-color-intermediate-bg-active: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-bg-active"])};
	--aec-radio-color-intermediate-bg-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-bg-disabled"])};
	--aec-radio-color-intermediate-border-default: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-border-default"])};
	--aec-radio-color-intermediate-border-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-border-hover"])};
	--aec-radio-color-intermediate-border-active: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-border-active"])};
	--aec-radio-color-intermediate-border-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-border-disabled"])};
	--aec-radio-color-intermediate-icon-default: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-icon-default"])};
	--aec-radio-color-intermediate-icon-hover: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-icon-hover"])};
	--aec-radio-color-intermediate-icon-active: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-icon-active"])};
	--aec-radio-color-intermediate-icon-disabled: ${getValue(data, ["tokens.css", "body", "radio", "color-intermediate-icon-disabled"])};
	--aec-radio-container-sizing: ${getValue(data, ["tokens.css", "body", "radio", "container-sizing"])}px;
	--aec-radio-container-border-radius: ${getValue(data, ["tokens.css", "body", "radio", "container-border-radius"])}px;
	--aec-radio-container-border-width: ${getValue(data, ["tokens.css", "body", "radio", "container-border-width"])}px;
	--aec-radio-hit-area-sizing: ${getValue(data, ["tokens.css", "body", "radio", "hit-area-sizing"])}px;
	--aec-radio-indicator-sizing: ${getValue(data, ["tokens.css", "body", "radio", "indicator-sizing"])}px;
	--aec-radio-focus-ring-border-radius: ${getValue(data, ["tokens.css", "body", "radio", "radio-focus-ring-border-radius"])}px;
	--aec-slider-color-track-bg-default: ${getValue(data, ["tokens.css", "body", "slider", "color-track-bg-default"])};
	--aec-slider-color-track-bg-selected: ${getValue(data, ["tokens.css", "body", "slider", "color-track-bg-selected"])};
	--aec-slider-color-track-bg-disabled: ${getValue(data, ["tokens.css", "body", "slider", "color-track-bg-disabled"])};
	--aec-slider-color-track-bg-disabled-bg: ${getValue(data, ["tokens.css", "body", "slider", "color-track-bg-disabled-bg"])};
	--aec-slider-color-track-border-default: ${getValue(data, ["tokens.css", "body", "slider", "color-track-border-default"])};
	--aec-slider-color-track-border-selected: ${getValue(data, ["tokens.css", "body", "slider", "color-track-border-selected"])};
	--aec-slider-color-track-border-disabled: ${getValue(data, ["tokens.css", "body", "slider", "color-track-border-disabled"])};
	--aec-slider-color-handle-bg-default: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-bg-default"])};
	--aec-slider-color-handle-bg-hover: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-bg-hover"])};
	--aec-slider-color-handle-bg-disabled: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-bg-disabled"])};
	--aec-slider-color-handle-border-default: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-border-default"])};
	--aec-slider-color-handle-border-hover: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-border-hover"])};
	--aec-slider-color-handle-border-disabled: ${getValue(data, ["tokens.css", "body", "slider", "color-handle-border-disabled"])};
	--aec-slider-track-height: ${getValue(data, ["tokens.css", "body", "slider", "track-height"])}px;
	--aec-slider-track-border-radius: ${getValue(data, ["tokens.css", "body", "slider", "track-border-radius"])}px;
	--aec-slider-track-border-width: ${getValue(data, ["tokens.css", "body", "slider", "track-border-width"])}px;
	--aec-slider-handle-height: ${getValue(data, ["tokens.css", "body", "slider", "handle-height"])}px;
	--aec-slider-handle-border-radius: ${getValue(data, ["tokens.css", "body", "slider", "handle-border-radius"])}px;
	--aec-slider-handle-border-width: ${getValue(data, ["tokens.css", "body", "slider", "handle-border-width"])}px;
	--aec-slider-handle-width: ${getValue(data, ["tokens.css", "body", "slider", "handle-width"])}px;
	--aec-slider-hit-area-width: ${getValue(data, ["tokens.css", "body", "slider", "hit-area-width"])}px;
	--aec-slider-hit-area-height: ${getValue(data, ["tokens.css", "body", "slider", "hit-area-height"])}px;
	--aec-snackbar-color-bg: ${getValue(data, ["tokens.css", "body", "snackbar", "color-bg"])};
	--aec-snackbar-color-border: ${getValue(data, ["tokens.css", "body", "snackbar", "color-border"])};
	--aec-snackbar-color-description: ${getValue(data, ["tokens.css", "body", "snackbar", "snackbar-color-description"])};
	--aec-switch-color-track-bg-default: ${getValue(data, ["tokens.css", "body", "switch", "color-track-bg-default"])};
	--aec-switch-color-track-bg-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-track-bg-hover"])};
	--aec-switch-color-track-bg-active: ${getValue(data, ["tokens.css", "body", "switch", "color-track-bg-active"])};
	--aec-switch-color-track-bg-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-track-bg-disabled"])};
	--aec-switch-color-track-border-default: ${getValue(data, ["tokens.css", "body", "switch", "color-track-border-default"])};
	--aec-switch-color-track-border-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-track-border-hover"])};
	--aec-switch-color-track-border-active: ${getValue(data, ["tokens.css", "body", "switch", "color-track-border-active"])};
	--aec-switch-color-track-border-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-track-border-disabled"])};
	--aec-switch-color-track-selected-bg-default: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-bg-default"])};
	--aec-switch-color-track-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-bg-hover"])};
	--aec-switch-color-track-selected-bg-active: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-bg-active"])};
	--aec-switch-color-track-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-bg-disabled"])};
	--aec-switch-color-track-selected-border-default: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-border-default"])};
	--aec-switch-color-track-selected-border-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-border-hover"])};
	--aec-switch-color-track-selected-border-active: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-border-active"])};
	--aec-switch-color-track-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-track-selected-border-disabled"])};
	--aec-switch-color-handle-bg-default: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-bg-default"])};
	--aec-switch-color-handle-bg-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-bg-hover"])};
	--aec-switch-color-handle-bg-active: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-bg-active"])};
	--aec-switch-color-handle-bg-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-bg-disabled"])};
	--aec-switch-color-handle-border-default: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-border-default"])};
	--aec-switch-color-handle-border-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-border-hover"])};
	--aec-switch-color-handle-border-active: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-border-active"])};
	--aec-switch-color-handle-border-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-border-disabled"])};
	--aec-switch-color-handle-selected-bg-default: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-bg-default"])};
	--aec-switch-color-handle-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-bg-hover"])};
	--aec-switch-color-handle-selected-bg-active: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-bg-active"])};
	--aec-switch-color-handle-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-bg-disabled"])};
	--aec-switch-color-handle-selected-border-default: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-border-default"])};
	--aec-switch-color-handle-selected-border-hover: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-border-hover"])};
	--aec-switch-color-handle-selected-border-active: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-border-active"])};
	--aec-switch-color-handle-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "switch", "color-handle-selected-border-disabled"])};
	--aec-switch-container-width: ${getValue(data, ["tokens.css", "body", "switch", "container-width"])}px;
	--aec-switch-container-height: ${getValue(data, ["tokens.css", "body", "switch", "container-height"])}px;
	--aec-switch-container-spacing: ${getValue(data, ["tokens.css", "body", "switch", "container-spacing"])}px;
	--aec-switch-container-border-radius: ${getValue(data, ["tokens.css", "body", "switch", "container-border-radius"])}px;
	--aec-switch-container-border-width: ${getValue(data, ["tokens.css", "body", "switch", "container-border-width"])}px;
	--aec-switch-handle-width: ${getValue(data, ["tokens.css", "body", "switch", "handle-width"])}px;
	--aec-switch-handle-height: ${getValue(data, ["tokens.css", "body", "switch", "handle-height"])}px;
	--aec-switch-handle-border-radius: ${getValue(data, ["tokens.css", "body", "switch", "handle-border-radius"])}px;
	--aec-switch-handle-border-width: ${getValue(data, ["tokens.css", "body", "switch", "handle-border-width"])}px;
	--aec-switch-hit-area-width: ${getValue(data, ["tokens.css", "body", "switch", "hit-area-width"])}px;
	--aec-switch-hit-area-height: ${getValue(data, ["tokens.css", "body", "switch", "switch-hit-area-height"])}px;
	--aec-tabbar-contained-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-bg-default"])};
	--aec-tabbar-contained-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-bg-hover"])};
	--aec-tabbar-contained-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-bg-active"])};
	--aec-tabbar-contained-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-bg-disabled"])};
	--aec-tabbar-contained-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-border-default"])};
	--aec-tabbar-contained-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-border-hover"])};
	--aec-tabbar-contained-tab-item-label-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-label-color-border-hover"])};
	--aec-tabbar-contained-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-border-active"])};
	--aec-tabbar-contained-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-border-disabled"])};
	--aec-tabbar-contained-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-text-default"])};
	--aec-tabbar-contained-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-text-hover"])};
	--aec-tabbar-contained-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-text-active"])};
	--aec-tabbar-contained-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-text-disabled"])};
	--aec-tabbar-contained-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-icon-default"])};
	--aec-tabbar-contained-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-icon-hover"])};
	--aec-tabbar-contained-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-icon-active"])};
	--aec-tabbar-contained-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-icon-disabled"])};
	--aec-tabbar-contained-tab-item-label-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-label-selected-border-default"])};
	--aec-tabbar-contained-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-bg-default"])};
	--aec-tabbar-contained-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-contained-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-border-default"])};
	--aec-tabbar-contained-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-border-disabled"])};
	--aec-tabbar-contained-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-text-default"])};
	--aec-tabbar-contained-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-text-disabled"])};
	--aec-tabbar-contained-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-icon-default"])};
	--aec-tabbar-contained-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-contained-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-color-bg-default"])};
	--aec-tabbar-contained-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "tab-color-border-default"])};
	--aec-tabbar-contained-gapped-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "gapped-tab-item-color-border-default"])};
	--aec-tabbar-contained-gapped-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "gapped-tab-item-color-selected-border-default"])};
	--aec-tabbar-contained-gapped-tab-item-label-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "gapped-tab-item-label-color-selected-border-default"])};
	--aec-tabbar-contained-gapped-tab-item-border-radius: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "gapped-tab-item-border-radius"])}px;
	--aec-tabbar-contained-gapped-tab-item-gap: ${getValue(data, ["tokens.css", "body", "tabbar", "contained", "gapped-tab-item-gap"])}px;
	--aec-tabbar-segment-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-bg-default"])};
	--aec-tabbar-segment-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-bg-hover"])};
	--aec-tabbar-segment-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-bg-active"])};
	--aec-tabbar-segment-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-bg-disabled"])};
	--aec-tabbar-segment-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-border-default"])};
	--aec-tabbar-segment-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-border-hover"])};
	--aec-tabbar-segment-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-border-active"])};
	--aec-tabbar-segment-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-border-disabled"])};
	--aec-tabbar-segment-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-text-default"])};
	--aec-tabbar-segment-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-text-hover"])};
	--aec-tabbar-segment-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-text-active"])};
	--aec-tabbar-segment-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-text-disabled"])};
	--aec-tabbar-segment-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-icon-default"])};
	--aec-tabbar-segment-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-icon-hover"])};
	--aec-tabbar-segment-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-icon-active"])};
	--aec-tabbar-segment-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-icon-disabled"])};
	--aec-tabbar-segment-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-bg-default"])};
	--aec-tabbar-segment-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-segment-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-border-"])};
	--aec-tabbar-segment-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-border-disabled"])};
	--aec-tabbar-segment-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-text-default"])};
	--aec-tabbar-segment-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-text-disabled"])};
	--aec-tabbar-segment-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-icon-default"])};
	--aec-tabbar-segment-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-segment-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-color-bg-default"])};
	--aec-tabbar-segment-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "segment", "tab-color-border-default"])};
	--aec-tabbar-stacked-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-bg-default"])};
	--aec-tabbar-stacked-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-bg-hover"])};
	--aec-tabbar-stacked-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-bg-active"])};
	--aec-tabbar-stacked-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-bg-disabled"])};
	--aec-tabbar-stacked-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-border-default"])};
	--aec-tabbar-stacked-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-border-hover"])};
	--aec-tabbar-stacked-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-border-active"])};
	--aec-tabbar-stacked-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-border-disabled"])};
	--aec-tabbar-stacked-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-text-default"])};
	--aec-tabbar-stacked-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-text-hover"])};
	--aec-tabbar-stacked-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-text-active"])};
	--aec-tabbar-stacked-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-text-disabled"])};
	--aec-tabbar-stacked-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-icon-default"])};
	--aec-tabbar-stacked-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-icon-hover"])};
	--aec-tabbar-stacked-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-icon-active"])};
	--aec-tabbar-stacked-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-icon-disabled"])};
	--aec-tabbar-stacked-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-bg-default"])};
	--aec-tabbar-stacked-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-stacked-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-border-default"])};
	--aec-tabbar-stacked-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-border-disabled"])};
	--aec-tabbar-stacked-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-text-default"])};
	--aec-tabbar-stacked-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-text-disabled"])};
	--aec-tabbar-stacked-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-icon-default"])};
	--aec-tabbar-stacked-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-stacked-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-color-bg-default"])};
	--aec-tabbar-stacked-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "stacked", "tab-color-border-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-bg-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-bg-hover"])};
	--aec-tabbar-underlined-inset-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-bg-active"])};
	--aec-tabbar-underlined-inset-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-bg-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-border-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-border-hover"])};
	--aec-tabbar-underlined-inset-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-border-active"])};
	--aec-tabbar-underlined-inset-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-border-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-text-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-text-hover"])};
	--aec-tabbar-underlined-inset-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-text-active"])};
	--aec-tabbar-underlined-inset-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-text-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-icon-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-icon-hover"])};
	--aec-tabbar-underlined-inset-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-icon-active"])};
	--aec-tabbar-underlined-inset-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-icon-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-bg-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-border-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-border-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-text-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-text-disabled"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-icon-default"])};
	--aec-tabbar-underlined-inset-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-underlined-inset-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-color-bg-default"])};
	--aec-tabbar-underlined-inset-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inset-tab-color-border-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-bg-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-bg-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-bg-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-bg-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-border-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-border-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-border-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-border-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-text-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-text-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-text-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-text-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-icon-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-icon-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-icon-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-icon-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-bg-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-border-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-border-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-text-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-text-disabled"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-icon-default"])};
	--aec-tabbar-underlined-inside-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-underlined-inside-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-color-bg-default"])};
	--aec-tabbar-underlined-inside-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "underline", "inside-tab-color-border-default"])};
	--aec-tabbar-vertical-tab-item-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-bg-default"])};
	--aec-tabbar-vertical-tab-item-color-bg-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-bg-hover"])};
	--aec-tabbar-vertical-tab-item-color-bg-active: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-bg-active"])};
	--aec-tabbar-vertical-tab-item-color-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-bg-disabled"])};
	--aec-tabbar-vertical-tab-item-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-border-default"])};
	--aec-tabbar-vertical-tab-item-color-border-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-border-hover"])};
	--aec-tabbar-vertical-tab-item-color-border-active: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-border-active"])};
	--aec-tabbar-vertical-tab-item-color-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-border-disabled"])};
	--aec-tabbar-vertical-tab-item-color-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-text-default"])};
	--aec-tabbar-vertical-tab-item-color-text-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-text-hover"])};
	--aec-tabbar-vertical-tab-item-color-text-active: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-text-active"])};
	--aec-tabbar-vertical-tab-item-color-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-text-disabled"])};
	--aec-tabbar-vertical-tab-item-color-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-icon-default"])};
	--aec-tabbar-vertical-tab-item-color-icon-hover: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-icon-hover"])};
	--aec-tabbar-vertical-tab-item-color-icon-active: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-icon-active"])};
	--aec-tabbar-vertical-tab-item-color-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-icon-disabled"])};
	--aec-tabbar-vertical-tab-item-color-selected-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-bg-default"])};
	--aec-tabbar-vertical-tab-item-color-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-bg-disabled"])};
	--aec-tabbar-vertical-tab-item-color-selected-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-border-default"])};
	--aec-tabbar-vertical-tab-item-color-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-border-disabled"])};
	--aec-tabbar-vertical-tab-item-color-selected-text-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-text-default"])};
	--aec-tabbar-vertical-tab-item-color-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-text-disabled"])};
	--aec-tabbar-vertical-tab-item-color-selected-icon-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-icon-default"])};
	--aec-tabbar-vertical-tab-item-color-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-item-color-selected-icon-disabled"])};
	--aec-tabbar-vertical-tab-color-bg-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-color-bg-default"])};
	--aec-tabbar-vertical-tab-color-border-default: ${getValue(data, ["tokens.css", "body", "tabbar", "vertical", "tab-color-border-default"])};
	--aec-toggle-button-color-option-1-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-bg-default"])};
	--aec-toggle-button-color-option-1-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-bg-hover"])};
	--aec-toggle-button-color-option-1-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-bg-active"])};
	--aec-toggle-button-color-option-1-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-bg-disabled"])};
	--aec-toggle-button-color-option-1-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-border-default"])};
	--aec-toggle-button-color-option-1-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-border-hover"])};
	--aec-toggle-button-color-option-1-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-border-active"])};
	--aec-toggle-button-color-option-1-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-border-disabled"])};
	--aec-toggle-button-color-option-1-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-text-default"])};
	--aec-toggle-button-color-option-1-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-text-hover"])};
	--aec-toggle-button-color-option-1-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-text-active"])};
	--aec-toggle-button-color-option-1-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-text-disabled"])};
	--aec-toggle-button-color-option-1-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-icon-default"])};
	--aec-toggle-button-color-option-1-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-icon-hover"])};
	--aec-toggle-button-color-option-1-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-icon-active"])};
	--aec-toggle-button-color-option-1-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-icon-disabled"])};
	--aec-toggle-button-color-option-1-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-bg-default"])};
	--aec-toggle-button-color-option-1-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-bg-hover"])};
	--aec-toggle-button-color-option-1-selected-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-bg-active"])};
	--aec-toggle-button-color-option-1-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-bg-disabled"])};
	--aec-toggle-button-color-option-1-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-border-default"])};
	--aec-toggle-button-color-option-1-selected-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-border-hover"])};
	--aec-toggle-button-color-option-1-selected-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-border-active"])};
	--aec-toggle-button-color-option-1-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-border-disabled"])};
	--aec-toggle-button-color-option-1-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-text-default"])};
	--aec-toggle-button-color-option-1-selected-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-text-hover"])};
	--aec-toggle-button-color-option-1-selected-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-text-active"])};
	--aec-toggle-button-color-option-1-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-text-disabled"])};
	--aec-toggle-button-color-option-1-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-icon-default"])};
	--aec-toggle-button-color-option-1-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-icon-hover"])};
	--aec-toggle-button-color-option-1-selected-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-icon-active"])};
	--aec-toggle-button-color-option-1-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-1-selected-icon-disabled"])};
	--aec-toggle-button-color-option-2-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-bg-default"])};
	--aec-toggle-button-color-option-2-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-bg-hover"])};
	--aec-toggle-button-color-option-2-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-bg-active"])};
	--aec-toggle-button-color-option-2-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-bg-disabled"])};
	--aec-toggle-button-color-option-2-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-border-default"])};
	--aec-toggle-button-color-option-2-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-border-hover"])};
	--aec-toggle-button-color-option-2-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-border-active"])};
	--aec-toggle-button-color-option-2-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-border-disabled"])};
	--aec-toggle-button-color-option-2-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-text-default"])};
	--aec-toggle-button-color-option-2-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-text-hover"])};
	--aec-toggle-button-color-option-2-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-text-active"])};
	--aec-toggle-button-color-option-2-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-text-disabled"])};
	--aec-toggle-button-color-option-2-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-icon-default"])};
	--aec-toggle-button-color-option-2-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-icon-hover"])};
	--aec-toggle-button-color-option-2-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-icon-active"])};
	--aec-toggle-button-color-option-2-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-icon-disabled"])};
	--aec-toggle-button-color-option-2-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-bg-default"])};
	--aec-toggle-button-color-option-2-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-bg-hover"])};
	--aec-toggle-button-color-option-2-selected-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-bg-active"])};
	--aec-toggle-button-color-option-2-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-bg-disabled"])};
	--aec-toggle-button-color-option-2-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-border-default"])};
	--aec-toggle-button-color-option-2-selected-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-border-hover"])};
	--aec-toggle-button-color-option-2-selected-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-border-active"])};
	--aec-toggle-button-color-option-2-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-border-disabled"])};
	--aec-toggle-button-color-option-2-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-text-default"])};
	--aec-toggle-button-color-option-2-selected-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-text-hover"])};
	--aec-toggle-button-color-option-2-selected-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-text-active"])};
	--aec-toggle-button-color-option-2-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-text-disabled"])};
	--aec-toggle-button-color-option-2-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-icon-default"])};
	--aec-toggle-button-color-option-2-selected-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-icon-hover$$rgb"])};
	--aec-toggle-button-color-option-2-selected-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-icon-active$$rgb"])};
	--aec-toggle-button-color-option-2-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-2-selected-icon-disabled"])};
	--aec-toggle-button-color-option-3-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-bg-default"])};
	--aec-toggle-button-color-option-3-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-bg-hover"])};
	--aec-toggle-button-color-option-3-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-bg-active"])};
	--aec-toggle-button-color-option-3-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-bg-disabled"])};
	--aec-toggle-button-color-option-3-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-border-default"])};
	--aec-toggle-button-color-option-3-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-border-hover"])};
	--aec-toggle-button-color-option-3-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-border-active"])};
	--aec-toggle-button-color-option-3-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-border-disabled"])};
	--aec-toggle-button-color-option-3-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-text-default"])};
	--aec-toggle-button-color-option-3-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-text-hover"])};
	--aec-toggle-button-color-option-3-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-text-active"])};
	--aec-toggle-button-color-option-3-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-text-disabled"])};
	--aec-toggle-button-color-option-3-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-icon-default"])};
	--aec-toggle-button-color-option-3-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-icon-hover"])};
	--aec-toggle-button-color-option-3-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-icon-active"])};
	--aec-toggle-button-color-option-3-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-icon-disabled"])};
	--aec-toggle-button-color-option-3-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-bg-default"])};
	--aec-toggle-button-color-option-3-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-bg-disabled"])};
	--aec-toggle-button-color-option-3-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-border-default"])};
	--aec-toggle-button-color-option-3-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-border-disabled"])};
	--aec-toggle-button-color-option-3-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-text-default"])};
	--aec-toggle-button-color-option-3-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-text-disabled"])};
	--aec-toggle-button-color-option-3-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "button", "color-option-3-selected-icon-default"])};
	--aec-toggle-button-color-option-3-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "button", "toggle-button-color-option-3-selected-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-bg-default"])};
	--aec-toggle-group-tab-item-color-option-1-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-bg-hover"])};
	--aec-toggle-group-tab-item-color-option-1-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-bg-active"])};
	--aec-toggle-group-tab-item-color-option-1-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-border-default"])};
	--aec-toggle-group-tab-item-color-option-1-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-border-hover"])};
	--aec-toggle-group-tab-item-color-option-1-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-border-active"])};
	--aec-toggle-group-tab-item-color-option-1-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-text-default"])};
	--aec-toggle-group-tab-item-color-option-1-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-text-hover"])};
	--aec-toggle-group-tab-item-color-option-1-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-text-active"])};
	--aec-toggle-group-tab-item-color-option-1-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-icon-default"])};
	--aec-toggle-group-tab-item-color-option-1-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-icon-hover"])};
	--aec-toggle-group-tab-item-color-option-1-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-icon-active"])};
	--aec-toggle-group-tab-item-color-option-1-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-bg-default"])};
	--aec-toggle-group-tab-item-color-option-1-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-border-default"])};
	--aec-toggle-group-tab-item-color-option-1-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-text-default"])};
	--aec-toggle-group-tab-item-color-option-1-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-1-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-icon-default"])};
	--aec-toggle-group-tab-item-color-option-1-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-1-selected-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-bg-default"])};
	--aec-toggle-group-tab-item-color-option-2-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-bg-hover"])};
	--aec-toggle-group-tab-item-color-option-2-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-bg-active"])};
	--aec-toggle-group-tab-item-color-option-2-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-border-default"])};
	--aec-toggle-group-tab-item-color-option-2-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-border-hover"])};
	--aec-toggle-group-tab-item-color-option-2-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-border-active"])};
	--aec-toggle-group-tab-item-color-option-2-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-text-default"])};
	--aec-toggle-group-tab-item-color-option-2-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-text-hover"])};
	--aec-toggle-group-tab-item-color-option-2-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-text-active"])};
	--aec-toggle-group-tab-item-color-option-2-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-icon-default"])};
	--aec-toggle-group-tab-item-color-option-2-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-icon-hover"])};
	--aec-toggle-group-tab-item-color-option-2-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-icon-active"])};
	--aec-toggle-group-tab-item-color-option-2-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-bg-default"])};
	--aec-toggle-group-tab-item-color-option-2-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-border-default"])};
	--aec-toggle-group-tab-item-color-option-2-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-text-default"])};
	--aec-toggle-group-tab-item-color-option-2-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-2-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-icon-default"])};
	--aec-toggle-group-tab-item-color-option-2-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-2-selected-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-bg-default"])};
	--aec-toggle-group-tab-item-color-option-3-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-bg-hover"])};
	--aec-toggle-group-tab-item-color-option-3-bg-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-bg-active"])};
	--aec-toggle-group-tab-item-color-option-3-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-border-default"])};
	--aec-toggle-group-tab-item-color-option-3-border-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-border-hover"])};
	--aec-toggle-group-tab-item-color-option-3-border-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-border-active"])};
	--aec-toggle-group-tab-item-color-option-3-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-text-default"])};
	--aec-toggle-group-tab-item-color-option-3-text-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-text-hover"])};
	--aec-toggle-group-tab-item-color-option-3-text-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-text-active"])};
	--aec-toggle-group-tab-item-color-option-3-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-icon-default"])};
	--aec-toggle-group-tab-item-color-option-3-icon-hover: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-icon-hover"])};
	--aec-toggle-group-tab-item-color-option-3-icon-active: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-icon-active"])};
	--aec-toggle-group-tab-item-color-option-3-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-icon-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-selected-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-bg-default"])};
	--aec-toggle-group-tab-item-color-option-3-selected-bg-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-bg-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-selected-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-border-default"])};
	--aec-toggle-group-tab-item-color-option-3-selected-border-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-border-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-selected-text-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-text-default"])};
	--aec-toggle-group-tab-item-color-option-3-selected-text-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-text-disabled"])};
	--aec-toggle-group-tab-item-color-option-3-selected-icon-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-icon-default"])};
	--aec-toggle-group-tab-item-color-option-3-selected-icon-disabled: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-color-option-3-selected-icon-disabled"])};
	--aec-toggle-group-tab-item-container-bg-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-spacing"])}px;
	--aec-toggle-group-tab-item-container-bg-border-radius: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-border-radius"])}px;
	--aec-toggle-group-tab-item-container-bg-border-width-top: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-border-width-top"])}px;
	--aec-toggle-group-tab-item-container-bg-border-width-right: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-border-width-right"])}px;
	--aec-toggle-group-tab-item-container-bg-border-width-bottom: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-border-width-bottom"])}px;
	--aec-toggle-group-tab-item-container-bg-border-width-left: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-bg-border-width-left"])}px;
	--aec-toggle-group-tab-item-container-text-item-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-item-container-text-item-spacing"])}px;
	--aec-toggle-group-tab-color-option-1-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-color-option-1-bg-default"])};
	--aec-toggle-group-tab-color-option-1-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-color-option-1-border-default"])};
	--aec-toggle-group-tab-color-option-2-bg-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-color-option-2-bg-default"])};
	--aec-toggle-group-tab-color-option-2-border-default: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-color-option-2-border-default"])};
	--aec-toggle-group-tab-container-bg-m-item-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-item-spacing"])}px;
	--aec-toggle-group-tab-container-bg-m-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-spacing"])}px;
	--aec-toggle-group-tab-container-bg-m-height: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-height"])}px;
	--aec-toggle-group-tab-container-bg-m-border-radius: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-border-radius"])}px;
	--aec-toggle-group-tab-container-bg-m-border-width-top: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-border-width-top"])}px;
	--aec-toggle-group-tab-container-bg-m-border-width-right: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-border-width-right"])}px;
	--aec-toggle-group-tab-container-bg-m-border-width-bottom: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-border-width-bottom"])}px;
	--aec-toggle-group-tab-container-bg-m-border-width-left: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-m-border-width-left"])}px;
	--aec-toggle-group-tab-container-bg-l-item-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-item-spacing"])}px;
	--aec-toggle-group-tab-container-bg-l-spacing: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-spacing"])}px;
	--aec-toggle-group-tab-container-bg-l-height: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-height"])}px;
	--aec-toggle-group-tab-container-bg-l-border-radius: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-border-radius"])}px;
	--aec-toggle-group-tab-container-bg-l-border-width-top: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-border-width-top"])}px;
	--aec-toggle-group-tab-container-bg-l-border-width-right: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-border-width-right"])}px;
	--aec-toggle-group-tab-container-bg-l-border-width-bottom: ${getValue(data, ["tokens.css", "body", "toggle", "group", "tab-container-bg-l-border-width-bottom"])}px;
	--aec-toggle-group-tab-container-bg-l-border-width-left: ${getValue(data, ["tokens.css", "body", "toggle", "group", "toggle-group-tab-container-bg-l-border-width-left"])}px;
	--aec-tooltip-color-dark-bg: ${getValue(data, ["tokens.css", "body", "tooltip", "color-dark-bg"])};
	--aec-tooltip-color-dark-border: ${getValue(data, ["tokens.css", "body", "tooltip", "color-dark-border"])};
	--aec-tooltip-color-dark-title: ${getValue(data, ["tokens.css", "body", "tooltip", "color-dark-title"])};
	--aec-tooltip-color-dark-body: ${getValue(data, ["tokens.css", "body", "tooltip", "color-dark-body"])};
	--aec-tooltip-color-white-bg: ${getValue(data, ["tokens.css", "body", "tooltip", "color-white-bg"])};
	--aec-tooltip-color-white-border: ${getValue(data, ["tokens.css", "body", "tooltip", "color-white-border"])};
	--aec-tooltip-color-white-title: ${getValue(data, ["tokens.css", "body", "tooltip", "color-white-title"])};
	--aec-tooltip-color-white-body: ${getValue(data, ["tokens.css", "body", "tooltip", "tooltip-color-white-body"])};
	--aec-font-size-50: 8;
	--aec-font-size-62: 10;
	--aec-font-size-75: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "12"])};
	--aec-font-size-87: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "14"])};
	--aec-font-size-100: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "16"])};
	--aec-font-size-112: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "18"])};
	--aec-font-size-125: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "20"])};
	--aec-font-size-150: 22;
	--aec-font-size-175: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "24"])};
	--aec-font-size-200: 26;
	--aec-font-size-225: 28;
	--aec-font-size-250: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "32"])};
	--aec-font-size-275: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "36"])};
	--aec-font-size-300: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "40"])};
	--aec-font-size-325: 44;
	--aec-font-size-350: 50;
	--aec-font-size-375: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "56"])};
	--aec-font-size-400: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "64"])};
	--aec-font-size-450: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "72"])};
	--aec-font-size-500: ${getValue(data, ["tokens.css", "primitive-typography", "font-size", "80"])};
	--aec-font-size-550: 90;
	--aec-font-size-600: 102;
	--aec-font-size-mobile-display-1: 56;
	--aec-font-size-mobile-display-2: 48;
	--aec-font-size-mobile-heading-1: 36;
	--aec-font-size-mobile-heading-2: 32;
	--aec-font-size-mobile-heading-3: 24;
	--aec-font-size-mobile-heading-4: 20;
	--aec-font-size-mobile-heading-5: 16;
	--aec-font-size-mobile-heading-6: 14;
	--aec-font-size-body-1: 16;
	--aec-font-size-body-2: 14;
	--aec-font-size-body-3: 12;
	--aec-font-size-button-l: 16;
	--aec-font-size-button-m: 14;
	--aec-font-size-button-s: 12;
	--aec-font-weight-100: 100;
	--aec-font-weight-200: 200;
	--aec-font-weight-300: 300;
	--aec-font-weight-400: 400;
	--aec-font-weight-500: 500;
	--aec-font-weight-600: 600;
	--aec-font-weight-700: 700;
	--aec-font-weight-800: 800;
	--aec-font-weight-900: 900;
	--aec-font-weight-body-regular: 500;
	--aec-font-weight-body-medium: 500;
	--aec-font-weight-body-bold: 700;
	--aec-font-weight-body-link: 500;
	--aec-font-weight-body-all-caps: 500;
	--aec-font-weight-body-extra-bold: 700;
	--aec-font-weight-heading-1: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "font-weight-dev"])};
	--aec-font-weight-heading-2: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "font-weight-dev"])};
	--aec-font-weight-heading-3: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "font-weight-dev"])};
	--aec-font-weight-heading-4: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "font-weight-dev"])};
	--aec-font-weight-heading-5: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "font-weight-dev"])};
	--aec-font-weight-heading-6: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "font-weight-dev"])};
	--aec-font-weight-display-1: ${getValue(data, ["tokens.css", "base-typography", "display-1", "font-weight-dev"])};
	--aec-font-weight-display-2: ${getValue(data, ["tokens.css", "base-typography", "display-2", "font-weight-dev"])};
	--aec-font-weight-button: ${getValue(data, ["tokens.css", "base-typography", "body-1-button", "font-weight-dev"])};
	--aec-font-weight-regular: 400;
	--aec-font-weight-medium: 500;
	--aec-font-weight-semi-bold: 600;
	--aec-font-weight-bold: 700;
	--aec-font-family-body: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " body"])}", sans-serif;
	--aec-font-family-body-alternative: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " body-alternative"])}", sans-serif;
	--aec-font-family-heading: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " headline"])}", sans-serif;
	--aec-font-family-heading-alternative: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " headline-alternative"])}", sans-serif;
	--aec-font-family-display: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " display"])}", sans-serif;
	--aec-font-family-button: "${getValue(data, ["tokens.css", " primitive-typography", " font-family", " body"])}", sans-serif;
	--aec-letter-spacing-0: 0px;
	--aec-paragraph-spacing-0: 0;
	--aec-paragraph-spacing-100: 8;
	--aec-paragraph-spacing-200: 16;
	--aec-paragraph-indent-0: 0px;
	--aec-text-case-none: none;
	--aec-text-case-uppercase: uppercase;
	--aec-text-decoration-none: none;
	--aec-text-decoration-underline: underline;
	--aec-sizing-illustration-2xs: ${getValue(data, ["semantics", "sizing", "illustration-2xs"])}px;
	--aec-sizing-illustration-xs: ${getValue(data, ["semantics", "sizing", "illustration-xs"])}px;
	--aec-sizing-illustration-s: ${getValue(data, ["semantics", "sizing", "illustration-s"])}px;
	--aec-sizing-illustration-m: ${getValue(data, ["semantics", "sizing", "illustration-m"])}px;
	--aec-sizing-illustration-l: ${getValue(data, ["semantics", "sizing", "illustration-l"])}px;
	--aec-sizing-illustration-xl: ${getValue(data, ["semantics", "sizing", "illustration-xl"])}px;
	--aec-sizing-illustration-2xl: ${getValue(data, ["semantics", "sizing", "illustration-2xl"])}px;
	--aec-sizing-icon-xs: ${getValue(data, ["semantics", "sizing", "icon-xs"])}px;
	--aec-sizing-icon-s: ${getValue(data, ["semantics", "sizing", "icon-s"])}px;
	--aec-sizing-icon-m: ${getValue(data, ["semantics", "sizing", "icon-m"])}px;
	--aec-sizing-icon-l: ${getValue(data, ["semantics", "sizing", "icon-l"])}px;
	--aec-sizing-icon-xl: ${getValue(data, ["semantics", "sizing", "icon-xl"])}px;
	--aec-sizing-icon-2xl: ${getValue(data, ["semantics", "sizing", "icon-2xl"])}px;
	--aec-sizing-selectable-xs: ${getValue(data, ["semantics", "sizing", "selectable-xs"])}px;
	--aec-sizing-selectable-s: ${getValue(data, ["semantics", "sizing", "selectable-s"])}px;
	--aec-sizing-selectable-m: ${getValue(data, ["semantics", "sizing", "selectable-m"])}px;
	--aec-sizing-selectable-l: ${getValue(data, ["semantics", "sizing", "selectable-l"])}px;
	--aec-sizing-selectable-xl: ${getValue(data, ["semantics", "sizing", "selectable-xl"])}px;
	--aec-sizing-selectable-xxl: ${getValue(data, ["semantics", "sizing", "selectable-xxl"])}px;
	--aec-spacing-container-padding-none: ${getValue(data, ["semantics", "spacing", "container-padding-none"])}px;
	--aec-spacing-container-padding-xs: ${getValue(data, ["semantics", "spacing", "container-padding-xs"])}px;
	--aec-spacing-container-padding-s: ${getValue(data, ["semantics", "spacing", "container-padding-s"])}px;
	--aec-spacing-container-padding-m: ${getValue(data, ["semantics", "spacing", "container-padding-m"])}px;
	--aec-spacing-container-padding-l: ${getValue(data, ["semantics", "spacing", "container-padding-l"])}px;
	--aec-spacing-container-gap-none: ${getValue(data, ["semantics", "spacing", "container-gap-none"])}px;
	--aec-spacing-container-gap-xs: ${getValue(data, ["semantics", "spacing", "container-gap-xs"])}px;
	--aec-spacing-container-gap-s: ${getValue(data, ["semantics", "spacing", "container-gap-s"])}px;
	--aec-spacing-container-gap-m: ${getValue(data, ["semantics", "spacing", "container-gap-m"])}px;
	--aec-spacing-container-gap-l: ${getValue(data, ["semantics", "spacing", "container-gap-l"])}px;
	--aec-spacing-container-gap-xl: ${getValue(data, ["semantics", "spacing", "container-gap-xl"])}px;
	--aec-spacing-container-stack-none: ${getValue(data, ["semantics", "spacing", "container-stack-none"])}px;
	--aec-spacing-container-stack-xs: ${getValue(data, ["semantics", "spacing", "container-stack-xs"])}px;
	--aec-spacing-container-stack-s: ${getValue(data, ["semantics", "spacing", "container-stack-s"])}px;
	--aec-spacing-container-stack-m: ${getValue(data, ["semantics", "spacing", "container-stack-m"])}px;
	--aec-spacing-container-stack-l: ${getValue(data, ["semantics", "spacing", "container-stack-l"])}px;
	--aec-spacing-container-stack-xl: ${getValue(data, ["semantics", "spacing", "container-stack-xl"])}px;
	--aec-spacing-selectable-padding-none: ${getValue(data, ["semantics", "spacing", "selectable-padding-none"])}px;
	--aec-spacing-selectable-padding-xs: ${getValue(data, ["semantics", "spacing", "selectable-padding-xs"])}px;
	--aec-spacing-selectable-padding-s: ${getValue(data, ["semantics", "spacing", "selectable-padding-s"])}px;
	--aec-spacing-selectable-padding-m: ${getValue(data, ["semantics", "spacing", "selectable-padding-m"])}px;
	--aec-spacing-selectable-padding-l: ${getValue(data, ["semantics", "spacing", "selectable-padding-l"])}px;
	--aec-spacing-selectable-gap-none: ${getValue(data, ["semantics", "spacing", "selectable-gap-none"])}px;
	--aec-spacing-selectable-gap-xs: ${getValue(data, ["semantics", "spacing", "selectable-gap-xs"])}px;
	--aec-spacing-selectable-gap-s: ${getValue(data, ["semantics", "spacing", "selectable-gap-s"])}px;
	--aec-spacing-selectable-gap-m: ${getValue(data, ["semantics", "spacing", "selectable-gap-m"])}px;
	--aec-spacing-selectable-gap-l: ${getValue(data, ["semantics", "spacing", "selectable-gap-l"])}px;
	--aec-spacing-selectable-stack-none: ${getValue(data, ["semantics", "spacing", "selectable-stack-none"])}px;
	--aec-spacing-selectable-stack-s: ${getValue(data, ["semantics", "spacing", "selectable-stack-s"])}px;
	--aec-spacing-selectable-stack-m: ${getValue(data, ["semantics", "spacing", "selectable-stack-m"])}px;
	--aec-spacing-selectable-stack-l: ${getValue(data, ["semantics", "spacing", "spacing-selectable-stack-l"])}px;
	--aec-border-radius-none: ${getValue(data, ["semantics", "border", "radius-none"])}px;
	--aec-border-radius-default: ${getValue(data, ["semantics", "border", "radius-default"])}px;
	--aec-border-radius-rounded-rect: ${getValue(data, ["semantics", "border", "radius-rounded-rect"])}px;
	--aec-border-radius-xl: ${getValue(data, ["semantics", "border", "radius-xl"])}px;
	--aec-border-radius-xl: ${getValue(data, ["semantics", "border", "radius-xxl"])}px;
	--aec-border-radius-rounded: ${getValue(data, ["semantics", "border", "radius-rounded"])}px;
	--aec-border-radius-focus: ${getValue(data, ["semantics", "border", "radius-focus"])}px;
	--aec-border-width-10: ${getValue(data, ["semantics", "border", "width-10"])}px;
	--aec-border-width-15: ${getValue(data, ["semantics", "border", "width-15"])}px;
	--aec-border-width-20: ${getValue(data, ["semantics", "border", "width-20"])}px;
	--aec-border-width-30: ${getValue(data, ["semantics", "border", "width-30"])}px;
	--aec-border-width-40: ${getValue(data, ["semantics", "border", "width-40"])}px;
	--aec-border-width-none: ${getValue(data, ["semantics", "border", "width-none"])}px;
	--aec-border-width-default: ${getValue(data, ["semantics", "border", "width-default"])}px;
	--aec-border-width-focus: ${getValue(data, ["semantics", "border", "width-focus"])}px;
	--aec-components-box-background-color: ${getValue(data, ["semantics", "color", "bg", "default"])};
	--aec-components-box-border-radius: ${getValue(data, ["semantics", "border", "radius-default"])}px;
	--aec-components-box-border-width: 1px;
	--aec-components-box-border-style: solid;
	--aec-components-box-border-color: ${getValue(data, ["semantics", "color", "border", "default"])};
	--aec-components-box-box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
	--aec-box-shadow-none: ${getValue(data, ["semantics", "box-shadow", "none", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "none", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "none", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "none", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "none", "box-shadow-1", "color"])};
	--aec-box-shadow-xs: ${getValue(data, ["semantics", "box-shadow", "xs", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "xs", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "xs", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "xs", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "xs", "box-shadow-1", "color"])};
	--aec-box-shadow-s: ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-1", "color"])},
	${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-2", "x"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-2", "y"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-2", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-2", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "s", "box-shadow-2", "color"])};
	--aec-box-shadow-m: ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-1", "color"])},
	${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-2", "x"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-2", "y"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-2", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-2", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "m", "box-shadow-2", "color"])};
	--aec-box-shadow-l: ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-1", "color"])},
	${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-2", "x"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-2", "y"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-2", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-2", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "l", "box-shadow-2", "color"])};
	--aec-box-shadow-xl: ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-1", "color"])},
	${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-2", "x"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-2", "y"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-2", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-2", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "xl", "box-shadow-2", "color"])};
	--aec-box-shadow-2xl: ${getValue(data, ["semantics", "box-shadow", "2xl", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "2xl", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "2xl", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "2xl", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "2xl", "box-shadow-1", "color"])};
	--aec-box-shadow-contained-tab-shadow: inset ${getValue(data, ["semantics", "box-shadow", "contained-tab-shadow", "box-shadow-1", "x"])}px ${getValue(data, ["semantics", "box-shadow", "contained-tab-shadow", "box-shadow-1", "y"])}px ${getValue(data, ["semantics", "box-shadow", "contained-tab-shadow", "box-shadow-1", "blur"])}px ${getValue(data, ["semantics", "box-shadow", "contained-tab-shadow", "box-shadow-1", "spread"])}px ${getValue(data, ["semantics", "box-shadow", "contained-tab-shadow", "box-shadow-1", "color"])};
	--aec-color-bg-default: ${getValue(data, ["semantics", "color", "background", "default"])};
	--aec-color-bg-variant: ${getValue(data, ["semantics", "color", "background", "variant"])};
	--aec-color-bg-disabled: ${getValue(data, ["semantics", "color", "background", "disabled"])};
	--aec-color-bg-inverse: ${getValue(data, ["semantics", "color", "background", "inverse"])};
	--aec-color-border-default: ${getValue(data, ["semantics", "color", "border", "default"])};
	--aec-color-border-variant: ${getValue(data, ["semantics", "color", "border", "variant"])};
	--aec-color-border-disabled: ${getValue(data, ["semantics", "color", "border", "disabled"])};
	--aec-color-text-default: ${getValue(data, ["semantics", "color", "text", "default"])};
	--aec-color-text-subtle: ${getValue(data, ["semantics", "color", "text", "subtle"])};
	--aec-color-text-variant: ${getValue(data, ["semantics", "color", "text", "variant"])};
	--aec-color-text-disabled: ${getValue(data, ["semantics", "color", "text", "disabled"])};
	--aec-color-text-inverse: ${getValue(data, ["semantics", "color", "text", "inverse"])};
	--aec-color-icon-default: ${getValue(data, ["semantics", "color", "icon", "default"])};
	--aec-color-icon-variant: ${getValue(data, ["semantics", "color", "icon", "variant"])};
	--aec-color-icon-disabled: ${getValue(data, ["semantics", "color", "icon", "disabled"])};
	--aec-color-icon-inverse: ${getValue(data, ["semantics", "color", "icon", "inverse"])};
	--aec-color-backdrop-inverse: ${getValue(data, ["semantics", "color", "backdrop", "inverse"])};
	--aec-color-backdrop-default: ${getValue(data, ["semantics", "color", "backdrop", "default"])};
	--aec-color-primary-default: ${getValue(data, ["semantics", "color", "primary", "default"])};
	--aec-color-primary-hover: ${getValue(data, ["semantics", "color", "primary", "hover"])};
	--aec-color-primary-subtle: ${getValue(data, ["semantics", "color", "primary", "subtle$$rgb"])};
	--aec-color-primary-on-default: ${getValue(data, ["semantics", "color", "primary", "on-default"])};
	--aec-color-primary-on-subtle: ${getValue(data, ["semantics", "color", "primary", "on-subtle"])};
	--aec-color-action-bg-default: ${getValue(data, ["semantics", "color", "action", "bg-default"])};
	--aec-color-action-bg-hover: ${getValue(data, ["semantics", "color", "action", "bg-hover$$rgb"])};
	--aec-color-action-bg-active: ${getValue(data, ["semantics", "color", "action", "bg-active$$rgb"])};
	--aec-color-action-bg-disabled: ${getValue(data, ["semantics", "color", "action", "bg-disabled"])};
	--aec-color-action-border-default: ${getValue(data, ["semantics", "color", "action", "border-default"])};
	--aec-color-action-border-hover: ${getValue(data, ["semantics", "color", "action", "border-hover"])};
	--aec-color-action-border-active: ${getValue(data, ["semantics", "color", "action", "border-active"])};
	--aec-color-action-inverse-bg-default: ${getValue(data, ["semantics", "color", "action", "inverse-bg-default"])};
	--aec-color-action-inverse-bg-hover: ${getValue(data, ["semantics", "color", "action", "inverse-bg-hover"])};
	--aec-color-action-inverse-bg-active: ${getValue(data, ["semantics", "color", "action", "inverse-bg-active"])};
	--aec-color-action-inverse-bg-disabled: ${getValue(data, ["semantics", "color", "action", "inverse-bg-disabled"])};
	--aec-color-action-inverse-border-default: ${getValue(data, ["semantics", "color", "action", "inverse-border-default"])};
	--aec-color-action-inverse-border-hover: ${getValue(data, ["semantics", "color", "action", "inverse-border-hover"])};
	--aec-color-action-inverse-border-active: ${getValue(data, ["semantics", "color", "action", "inverse-border-active"])};
	--aec-color-secondary-default: ${getValue(data, ["semantics", "color", "secondary", "default"])};
	--aec-color-secondary-hover: ${getValue(data, ["semantics", "color", "secondary", "hover"])};
	--aec-color-secondary-subtle: ${getValue(data, ["semantics", "color", "secondary", "subtle$$rgb"])};
	--aec-color-secondary-on-default: ${getValue(data, ["semantics", "color", "secondary", "on-default"])};
	--aec-color-secondary-on-subtle: ${getValue(data, ["semantics", "color", "secondary", "on-subtle"])};
	--aec-color-success-default: ${getValue(data, ["semantics", "color", "success", "default"])};
	--aec-color-success-subtle: ${getValue(data, ["semantics", "color", "success", "subtle$$rgb"])};
	--aec-color-success-on-default: ${getValue(data, ["semantics", "color", "success", "on-default"])};
	--aec-color-success-on-subtle: ${getValue(data, ["semantics", "color", "success", "on-subtle"])};
	--aec-color-warning-default: ${getValue(data, ["semantics", "color", "warning", "default"])};
	--aec-color-warning-subtle: ${getValue(data, ["semantics", "color", "warning", "subtle$$rgb"])};
	--aec-color-warning-on-default: ${getValue(data, ["semantics", "color", "warning", "on-default"])};
	--aec-color-warning-on-subtle: ${getValue(data, ["semantics", "color", "warning", "on-subtle"])};
	--aec-color-error-default: ${getValue(data, ["semantics", "color", "error", "default"])};
	--aec-color-error-subtle: ${getValue(data, ["semantics", "color", "error", "subtle$$rgb"])};
	--aec-color-error-on-default: ${getValue(data, ["semantics", "color", "error", "on-default"])};
	--aec-color-error-on-subtle: ${getValue(data, ["semantics", "color", "error", "on-subtle"])};
	--aec-color-decoration-01: ${getValue(data, ["semantics", "color", "decoration", "01"])};
	--aec-color-decoration-02: ${getValue(data, ["semantics", "color", "decoration", "02$$rgb"])};
	--aec-color-decoration-03: ${getValue(data, ["semantics", "color", "decoration", "03$$rgb"])};
	--aec-color-decoration-04: ${getValue(data, ["semantics", "color", "decoration", "04"])};
	--aec-color-decoration-05: ${getValue(data, ["semantics", "color", "decoration", "05$$rgb"])};
	--aec-color-decoration-06: ${getValue(data, ["semantics", "color", "decoration", "06$$rgb"])};
	--aec-color-inverse-bg-default: ${getValue(data, ["semantics", "color", "inverse", "bg-default"])};
	--aec-color-inverse-bg-variant: ${getValue(data, ["semantics", "color", "inverse", "bg-variant"])};
	--aec-color-inverse-bg-disabled: ${getValue(data, ["semantics", "color", "inverse", "bg-disabled"])};
	--aec-color-inverse-border-default: ${getValue(data, ["semantics", "color", "inverse", "border-default"])};
	--aec-color-inverse-border-variant: ${getValue(data, ["semantics", "color", "inverse", "border-variant"])};
	--aec-color-inverse-border-disabled: ${getValue(data, ["semantics", "color", "inverse", "border-disabled"])};
	--aec-color-inverse-text-default: ${getValue(data, ["semantics", "color", "inverse", "text-default"])};
	--aec-color-inverse-text-variant: ${getValue(data, ["semantics", "color", "inverse", "text-variant"])};
	--aec-color-inverse-text-disabled: ${getValue(data, ["semantics", "color", "inverse", "text-disabled"])};
	--aec-color-inverse-icon-default: ${getValue(data, ["semantics", "color", "inverse", "icon-default"])};
	--aec-color-inverse-icon-variant: ${getValue(data, ["semantics", "color", "inverse", "icon-variant"])};
	--aec-color-inverse-icon-disabled: ${getValue(data, ["semantics", "color", "inverse", "icon-disabled"])};
	--aec-color-dark-grey-base: ${getValue(data, ["semantics", "color", "dark-grey", "base"])};
	--aec-color-dark-grey-weak: ${getValue(data, ["semantics", "color", "dark-grey", "weak$$rgb"])};
	--aec-color-dark-grey-strong: ${getValue(data, ["semantics", "color", "dark-grey", "strong$$rgb"])};
	--aec-color-light-grey-base: ${getValue(data, ["semantics", "color", "light-grey", "color-light-grey-base"])};
	--aec-color-light-grey-weak: ${getValue(data, ["semantics", "color", "light-grey", "color-light-grey-weak$$rgb"])};
	--aec-color-light-grey-strong: ${getValue(data, ["semantics", "color", "light-grey", "color-light-grey-strong$$rgb"])};
	--aec-color-focus-default: ${getValue(data, ["semantics", "color", "focus", "color-focus-default"])};
	--aec-outline-width-sm: ${getValue(data, ["tokens.css", "focus-ring", "outline-width-sm"])}px;
	--aec-outline-width-md: ${getValue(data, ["tokens.css", "focus-ring", "outline-width-md"])}px;
	--aec-outline-offset-sm: ${getValue(data, ["tokens.css", "focus-ring", "outline-offset-sm"])}px;
	--aec-outline-offset-md: ${getValue(data, ["tokens.css", "focus-ring", "outline-offset-md"])}px;
	--aec-focus-outline-style: solid;
	--aec-blazer-color-chevy-blue: #0077d9;
	--aec-blazer-color-black: #000000;
	--aec-blazer-color-grey-very-dark: #1a1a1a;
	--aec-blazer-color-grey-dark: #262626;
	--aec-blazer-color-grey-mid-dark: #666666;
	--aec-blazer-color-grey-ui: #8c8c8c;
	--aec-blazer-color-grey-mid: #b3b3b3;
	--aec-blazer-color-grey-light: #e6e6e6;
	--aec-blazer-color-grey-very-light: #f2f2f2;
	--aec-blazer-color-white: #ffffff;
	--aec-blazer-color-chevy-yellow: #f2bc18;
	--aec-blazer-color-chevy-red: #f25130;
	--aec-blazer-color-error-red: #d64022;
	--aec-blazer-color-success-green: #2d871b;
	--aec-blazer-color-button-disabled: #c3cfd9;
	--aec-blazer-color-button-hover: #005ba6;
	--aec-blazer-color-gold-legacy: #b3842d;
	--aec-source-color-brand: #171473;
	--aec-source-color-black: #0D0D0D;
	--aec-source-color-grey-very-dark: #282828;
	--aec-source-color-grey-dark: #505050;
	--aec-source-color-grey-mid-dark: #787878;
	--aec-source-color-grey-ui: #A0A0A0;
	--aec-source-color-grey-mid: #d2d2d2;
	--aec-source-color-grey-light: #f2f2f2;
	--aec-source-color-grey-very-light: #FCFCFC;
	--aec-source-color-white: #ffffff;
	--aec-source-color-chevy-yellow: #C8800D;
	--aec-source-color-chevy-red: #B50000;
	--aec-source-color-error-red: #B50000;
	--aec-source-color-success-green: #0A7305;
	--aec-source-color-button-disabled: #d2d2d2;
	--aec-source-color-button-hover: #211FAB;
	--aec-source-color-gold-legacy: #F5D98F;
	--aec-toggle-button-color-option-3-selected-bg-hover: ${getValue(data, ["tokens.css", "body", "toggle-button", "color-option-3-selected-bg-hover"])};
	--aec-toggle-button-color-option-3-selected-border-hover: ${getValue(data, ["tokens.css", "body", "toggle-button", "color-option-3-selected-border-hover"])};
	--aec-toggle-button-color-option-3-selected-text-hover: ${getValue(data, ["tokens.css", "body", "toggle-button", "color-option-3-selected-text-hover"])};
	--aec-drawer-header-color-bg-default: ${getValue(data, ["tokens.css", "drawer-header", "color-default-bg"])};
	--aec-drawer-header-text-default: ${getValue(data, ["tokens.css", "drawer-header", "color-default-text"])};
	--aec-drawer-header-icon-default: ${getValue(data, ["tokens.css", "drawer-header", "color-default-icon"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-bg: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-bg"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-border: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-border"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-inverse: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-icon"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-inverse: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-text"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-bg-hover: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-bg-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-border-hover: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-border-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-inverse-hover: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-icon-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-inverse-hover: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-text-hover"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-bg-active: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-bg-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-inverse-border-active: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-border-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-icon-inverse-active: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-icon-active"])};
	--aec-tabbar-underlined-inside-tab-item-color-text-inverse-active: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab-item", "color-inverse-text-active"])};
	--aec-tabbar-underlined-inside-tab-color-inverse-bg: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab", "color-inverse-bg"])};
	--aec-tabbar-underlined-inside-tab-color-inverse-border: ${getValue(data, ["tokens.css", "tabbar-underlined-inside-tab", "color-inverse-border"])};
	--aec-navbar-bg-default: ${getValue(data, ["tokens.css", "navbar", "color-default-bg"])};
	--aec-navbar-border-default: ${getValue(data, ["tokens.css", "navbar", "color-default-border"])};
	--aec-navbar-text-default: ${getValue(data, ["tokens.css", "navbar", "color-default-text"])};
	--aec-navbar-icon-default: ${getValue(data, ["tokens.css", "navbar", "color-default-icon"])};
	--aec-toggle-button-color-option-3-selected-border-width: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected", "border-width"])}px;
	--aec-toggle-button-color-option-3-border-width: ${getValue(data, ["tokens.css", "toggle-button-color-option-3", "border-width"])}px;
	--aec-toggle-button-color-option-3-border-width-hover: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-hover", "border-width"])}px;
	--aec-toggle-button-color-option-3-selected-border-width-hover: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-hover", "border-width"])}px;
	--aec-toggle-button-color-option-3-selected-border-active: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-active", "border-color"])};
	--aec-toggle-button-color-option-3-selected-bg-active: ${getValue(data, ["tokens.css", "toggle-button-color-option-3-selected-active", "background-color"])};
	--aec-card-border-radius: ${getValue(data, ["tokens.css", "card", "border-radius"])}px;
	--aec-overlay-color-icon-active: ${getValue(data, ["tokens.css", "overlay", "color-icon-active"])};
	--aec-overlay-color-icon-bg-active: ${getValue(data, ["tokens.css", "overlay", "color-icon-bg-active"])};
	--aec-overlay-color-icon-disabled: ${getValue(data, ["tokens.css", "overlay", "color-icon-disabled"])};
	--aec-overlay-color-icon-bg-disabled: ${getValue(data, ["tokens.css", "overlay", "color-icon-bg-disabled"])};
	--aec-overlay-color-icon-hover: ${getValue(data, ["tokens.css", "overlay", "color-icon-hover"])};
	--aec-overlay-color-icon-bg-hover: ${getValue(data, ["tokens.css", "overlay", "color-icon-bg-hover"])};
}

@media (min-width: 768px) {
	body {
		--aec-font-size-display-1: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 768px", "font-size"])}px;
		--aec-font-size-display-2: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-1: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-2: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-3: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-4: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-5: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 768px", "font-size"])}px;
		--aec-font-size-heading-6: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 768px", "font-size"])}px;
		--aec-switch-hit-area-width: ${getValue(data, ["tokens.css", "body", "switch", "hit-area-width"])}px;
	}
}

@media (min-width: 1025px) {
	body {
		--aec-notification-container-inside-spacing: 16px;
		--aec-notification-container-inside-item-spacing: 16px;
		--aec-notification-container-inside-border-radius: 0px;
		--aec-notification-container-inside-box-shadow: 0 4px 3px 0 rgba(0, 0, 0, 0.07), 0 2px 2px 0 rgba(0, 0, 0, 0.06);
		--aec-notification-container-inside-border-width-left: 2px;
		--aec-notification-container-inside-border-width-top: 0px;
		--aec-notification-container-inside-border-width-right: 0px;
		--aec-notification-container-inside-border-width-bottom: 0px;
		--aec-radio-hit-area-sizing: 24px;
		--aec-slider-hit-area-width: 40px;
		--aec-slider-hit-area-height: 40px;
		--aec-switch-hit-area-width: ${getValue(data, ["tokens.css", "body", "switch", "hit-area-width"])}px;
		--aec-switch-hit-area-height: 24px;
		--aec-font-size-display-1: ${getValue(data, ["tokens.css", "base-typography", "display-1", "min-width: 1025px", "font-size"])};
		--aec-font-size-display-2: ${getValue(data, ["tokens.css", "base-typography", "display-2", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-1: ${getValue(data, ["tokens.css", "base-typography", "headline-1", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-2: ${getValue(data, ["tokens.css", "base-typography", "headline-2", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-3: ${getValue(data, ["tokens.css", "base-typography", "headline-3", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-4: ${getValue(data, ["tokens.css", "base-typography", "headline-4", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-5: ${getValue(data, ["tokens.css", "base-typography", "headline-5", "min-width: 1025px", "font-size"])};
		--aec-font-size-heading-6: ${getValue(data, ["tokens.css", "base-typography", "headline-6", "min-width: 1025px", "font-size"])};
	}
}
